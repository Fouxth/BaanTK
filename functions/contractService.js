/**
 * Digital Contract Service - ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏≠‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏£‡∏≠‡∏ô‡∏¥‡∏Å‡∏™‡πå
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ï‡∏≤‡∏°‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
 */

const admin = require("firebase-admin");

class ContractService {
  /**
   * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•
   */
  static generateContract(borrowerData, loanTerms, settings) {
    const contractData = {
      contractId: `CONTRACT_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      borrower: {
        fullName: `${borrowerData.firstName} ${borrowerData.lastName}`,
        idCard: borrowerData.idCard,
        address: borrowerData.currentAddress || borrowerData.address,
        birthDate: borrowerData.birthDate
      },
      loan: {
        principal: loanTerms.principalAmount || borrowerData.amount,
        interestRate: loanTerms.interestRate,
        totalAmount: loanTerms.totalWithInterest,
        frequency: borrowerData.frequency,
        dueDate: loanTerms.dueDate,
        installmentAmount: loanTerms.installmentAmount
      },
      terms: this.generateLegalTerms(borrowerData, loanTerms, settings),
      createdAt: new Date().toISOString(),
      status: "pending_signature"
    };

    return contractData;
  }

  /**
   * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢
   */
  static generateLegalTerms(borrowerData, loanTerms, settings) {
    const interestRatePercent = (loanTerms.interestRate * 100).toFixed(2);
    const frequencyText = this.getFrequencyText(borrowerData.frequency);

    return {
      article1: {
        title: "‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 1 ‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Å‡∏π‡πâ‡πÄ‡∏á‡∏¥‡∏ô",
        content: `‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏Å‡∏π‡πâ‡∏ï‡∏Å‡∏•‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏Å‡∏π‡πâ‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${borrowerData.amount.toLocaleString()} ‡∏ö‡∏≤‡∏ó (${this.numberToThaiText(borrowerData.amount)}) ‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡πâ‡∏ß`
      },
      article2: {
        title: "‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 2 ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢",
        content: `‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏ï‡∏Å‡∏•‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡πÉ‡∏ô‡∏≠‡∏±‡∏ï‡∏£‡∏≤ ${interestRatePercent}% ‡∏ï‡πà‡∏≠ ${frequencyText} ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï`
      },
      article3: {
        title: "‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 3 ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ",
        content: `‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏à‡∏∞‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ ${frequencyText} ‡πÉ‡∏ô‡∏≠‡∏±‡∏ï‡∏£‡∏≤ ${loanTerms.installmentAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó ‡∏à‡∏ô‡∏Ñ‡∏£‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô ${loanTerms.totalWithInterest.toLocaleString()} ‡∏ö‡∏≤‡∏ó`
      },
      article4: {
        title: "‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 4 ‡∏Å‡∏≤‡∏£‡∏ú‡∏¥‡∏î‡∏ô‡∏±‡∏î",
        content: "‡∏´‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏ú‡∏¥‡∏î‡∏ô‡∏±‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡πÄ‡∏Å‡∏¥‡∏ô 7 ‡∏ß‡∏±‡∏ô ‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏Å‡∏π‡πâ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏£‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ"
      },
      article5: {
        title: "‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 5 ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
        content: "‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏Å‡∏π‡πâ‡∏à‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•‡∏ï‡∏≤‡∏°‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏ä‡∏ö‡∏±‡∏ç‡∏ç‡∏±‡∏ï‡∏¥‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• ‡∏û.‡∏®. 2562"
      },
      legalBasis: "‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏±‡∏î‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏û‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏û‡∏≤‡∏ì‡∏¥‡∏ä‡∏¢‡πå ‡∏°‡∏≤‡∏ï‡∏£‡∏≤ 648-679 ‡πÅ‡∏•‡∏∞‡∏û‡∏£‡∏∞‡∏£‡∏≤‡∏ä‡∏ö‡∏±‡∏ç‡∏ç‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πà‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏Å‡∏£‡πÅ‡∏•‡∏∞‡∏ú‡∏π‡πâ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏¢‡πà‡∏≠‡∏¢ ‡∏û.‡∏®. 2560"
    };
  }

  /**
   * ‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ó‡∏¢
   */
  static numberToThaiText(number) {
    const ones = ["", "‡∏´‡∏ô‡∏∂‡πà‡∏á", "‡∏™‡∏≠‡∏á", "‡∏™‡∏≤‡∏°", "‡∏™‡∏µ‡πà", "‡∏´‡πâ‡∏≤", "‡∏´‡∏Å", "‡πÄ‡∏à‡πá‡∏î", "‡πÅ‡∏õ‡∏î", "‡πÄ‡∏Å‡πâ‡∏≤"];
    const tens = ["", "", "‡∏¢‡∏µ‡πà", "‡∏™‡∏≤‡∏°", "‡∏™‡∏µ‡πà", "‡∏´‡πâ‡∏≤", "‡∏´‡∏Å", "‡πÄ‡∏à‡πá‡∏î", "‡πÅ‡∏õ‡∏î", "‡πÄ‡∏Å‡πâ‡∏≤"];
    const positions = ["", "‡∏™‡∏¥‡∏ö", "‡∏£‡πâ‡∏≠‡∏¢", "‡∏û‡∏±‡∏ô", "‡∏´‡∏°‡∏∑‡πà‡∏ô", "‡πÅ‡∏™‡∏ô", "‡∏•‡πâ‡∏≤‡∏ô"];

    if (number === 0) return "‡∏®‡∏π‡∏ô‡∏¢‡πå";

    const str = number.toString();
    const result = "";

    // Simple implementation for common numbers
    if (number < 10) return ones[number];
    if (number >= 1000000) return `${Math.floor(number/1000000)}‡∏•‡πâ‡∏≤‡∏ô${number%1000000 > 0 ? this.numberToThaiText(number%1000000) : ""}`;
    if (number >= 1000) return `${this.numberToThaiText(Math.floor(number/1000))}‡∏û‡∏±‡∏ô${number%1000 > 0 ? this.numberToThaiText(number%1000) : ""}`;
    if (number >= 100) return `${ones[Math.floor(number/100)]}‡∏£‡πâ‡∏≠‡∏¢${number%100 > 0 ? this.numberToThaiText(number%100) : ""}`;
    if (number >= 20) return `${tens[Math.floor(number/10)]}‡∏™‡∏¥‡∏ö${number%10 > 0 ? ones[number%10] : ""}`;
    if (number >= 10) return `‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏™‡∏¥‡∏ö${number%10 > 0 ? ones[number%10] : ""}`;

    return ones[number];
  }

  /**
   * ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ó‡∏¢
   */
  static getFrequencyText(frequency) {
    const frequencies = {
      daily: "‡∏ß‡∏±‡∏ô",
      weekly: "‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå",
      monthly: "‡πÄ‡∏î‡∏∑‡∏≠‡∏ô"
    };
    return frequencies[frequency] || "‡πÄ‡∏î‡∏∑‡∏≠‡∏ô";
  }

  /**
   * ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏±‡∏ç‡∏ç‡∏≤
   */
  static generateContractHTML(contractData) {
    return `
    <!DOCTYPE html>
    <html lang="th">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå</title>
        <style>
            body { font-family: 'Sarabun', sans-serif; line-height: 1.6; margin: 20px; }
            .contract-header { text-align: center; margin-bottom: 30px; }
            .contract-content { max-width: 800px; margin: 0 auto; }
            .article { margin-bottom: 20px; }
            .article-title { font-weight: bold; color: #2563eb; }
            .signature-area { margin-top: 50px; display: flex; justify-content: space-between; }
            .signature-box { border: 1px solid #ccc; padding: 20px; width: 300px; text-align: center; }
            .contract-id { font-size: 12px; color: #666; text-align: center; margin-top: 20px; }
            @media print { body { margin: 0; } }
        </style>
    </head>
    <body>
        <div class="contract-content">
            <div class="contract-header">
                <h1>‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå</h1>
                <p>‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏™‡∏±‡∏ç‡∏ç‡∏≤: ${contractData.contractId}</p>
                <p>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${new Date().toLocaleDateString("th-TH")}</p>
            </div>

            <p><strong>‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏Å‡∏π‡πâ:</strong> ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πÄ‡∏Ñ ‡∏à‡∏≥‡∏Å‡∏±‡∏î</p>
            <p><strong>‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ:</strong> ${contractData.borrower.fullName}</p>
            <p><strong>‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô:</strong> ${contractData.borrower.idCard}</p>
            <p><strong>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</strong> ${contractData.borrower.address}</p>

            <div class="article">
                <div class="article-title">${contractData.terms.article1.title}</div>
                <p>${contractData.terms.article1.content}</p>
            </div>

            <div class="article">
                <div class="article-title">${contractData.terms.article2.title}</div>
                <p>${contractData.terms.article2.content}</p>
            </div>

            <div class="article">
                <div class="article-title">${contractData.terms.article3.title}</div>
                <p>${contractData.terms.article3.content}</p>
            </div>

            <div class="article">
                <div class="article-title">${contractData.terms.article4.title}</div>
                <p>${contractData.terms.article4.content}</p>
            </div>

            <div class="article">
                <div class="article-title">${contractData.terms.article5.title}</div>
                <p>${contractData.terms.article5.content}</p>
            </div>

            <p><strong>‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ó‡∏≤‡∏á‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢:</strong> ${contractData.terms.legalBasis}</p>

            <div class="signature-area">
                <div class="signature-box">
                    <p>‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏Å‡∏π‡πâ</p>
                    <br><br><br>
                    <p>................................</p>
                    <p>‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πÄ‡∏Ñ ‡∏à‡∏≥‡∏Å‡∏±‡∏î</p>
                </div>
                <div class="signature-box">
                    <p>‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ</p>
                    <br><br><br>
                    <p>................................</p>
                    <p>${contractData.borrower.fullName}</p>
                </div>
            </div>

            <div class="contract-id">
                <p>‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏≠‡∏¥‡πÄ‡∏•‡πá‡∏Å‡∏ó‡∏£‡∏≠‡∏ô‡∏¥‡∏Å‡∏™‡πå - ‡∏£‡∏∞‡∏ö‡∏ö BaanTK</p>
                <p>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: ${contractData.createdAt}</p>
            </div>
        </div>
    </body>
    </html>`;
  }

  /**
   * ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏•‡∏á Database
   */
  static async saveContract(contractData, borrowerId) {
    try {
      const docRef = await admin.firestore().collection("contracts").add({
        ...contractData,
        borrowerId,
        signedAt: null,
        ipAddress: null,
        userAgent: null
      });

      console.log(`üìÑ Contract created: ${docRef.id}`);
      return docRef.id;
    } catch (error) {
      console.error("Error saving contract:", error);
      throw error;
    }
  }

  /**
   * ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ô‡∏≤‡∏°‡∏™‡∏±‡∏ç‡∏ç‡∏≤
   */
  static async signContract(contractId, borrowerId, signatureData, req) {
    try {
      await admin.firestore().collection("contracts").doc(contractId).update({
        status: "signed",
        signedAt: admin.firestore.FieldValue.serverTimestamp(),
        signatureData,
        ipAddress: req.ip,
        userAgent: req.get("User-Agent")
      });

      // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ
      await admin.firestore().collection("borrowers").doc(borrowerId).update({
        contractSigned: true,
        contractId,
        updatedAt: admin.firestore.FieldValue.serverTimestamp()
      });

      console.log(`‚úÖ Contract signed: ${contractId}`);
      return true;
    } catch (error) {
      console.error("Error signing contract:", error);
      throw error;
    }
  }
}

module.exports = ContractService;
