// functions/routes/slipApproval.js
const admin = require("firebase-admin");
const { sendSlipApprovalNotification, sendApplicationStatusNotification } = require("../line-auto-reply");

const db = admin.firestore();

// API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥/‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏™‡∏•‡∏µ‡∏õ
async function handleSlipApproval(req, res) {
  try {
    const { slipId, action, adminId } = req.body;
    
    if (!slipId || !action || !['approve', 'reject'].includes(action)) {
      return res.status(400).json({ 
        success: false, 
        error: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" 
      });
    }

    console.log(`üîß Admin ${adminId} ${action}ing slip ${slipId}`);

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏•‡∏µ‡∏õ
    const slipRef = db.collection('payment_slips').doc(slipId);
    const slipDoc = await slipRef.get();
    
    if (!slipDoc.exists) {
      return res.status(404).json({ 
        success: false, 
        error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏•‡∏µ‡∏õ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏" 
      });
    }
    
    const slipData = slipDoc.data();
    const userId = slipData.userId;
    
    if (!userId) {
      return res.status(400).json({ 
        success: false, 
        error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏™‡∏•‡∏µ‡∏õ" 
      });
    }

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏•‡∏µ‡∏õ
    const updateData = {
      status: action === 'approve' ? 'approved' : 'rejected',
      reviewedAt: admin.firestore.FieldValue.serverTimestamp(),
      reviewedBy: adminId || 'admin'
    };

    await slipRef.update(updateData);

    // ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    const notificationResult = await sendSlipApprovalNotification(
      userId, 
      slipData, 
      action === 'approve' ? 'approved' : 'rejected'
    );

    console.log(`‚úÖ Slip ${slipId} ${action}ed and notification sent:`, notificationResult);

    res.json({ 
      success: true, 
      message: `${action === 'approve' ? '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥' : '‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò'}‡∏™‡∏•‡∏µ‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`,
      notificationSent: notificationResult.success
    });

  } catch (error) {
    console.error(`‚ùå Error in slip ${req.body.action}:`, error);
    res.status(500).json({ 
      success: false, 
      error: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå" 
    });
  }
}

// API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥/‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠
async function handleApplicationApproval(req, res) {
  try {
    const { borrowerId, action, adminId } = req.body;
    
    if (!borrowerId || !action || !['approve', 'reject'].includes(action)) {
      return res.status(400).json({ 
        success: false, 
        error: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á" 
      });
    }

    console.log(`üîß Admin ${adminId} ${action}ing application ${borrowerId}`);

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£
    const borrowerRef = db.collection('borrowers').doc(borrowerId);
    const borrowerDoc = await borrowerRef.get();
    
    if (!borrowerDoc.exists) {
      return res.status(404).json({ 
        success: false, 
        error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏" 
      });
    }
    
    const borrowerData = borrowerDoc.data();
    const userId = borrowerData.userId;
    
    if (!userId) {
      return res.status(400).json({ 
        success: false, 
        error: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£" 
      });
    }

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£
    const updateData = {
      status: action === 'approve' ? 'approved' : 'rejected',
      reviewedAt: admin.firestore.FieldValue.serverTimestamp(),
      reviewedBy: adminId || 'admin'
    };

    // ‡∏ñ‡πâ‡∏≤‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞
    if (action === 'approve') {
      const dueDate = new Date();
      dueDate.setMonth(dueDate.getMonth() + 1); // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤
      
      updateData.approvedAt = admin.firestore.FieldValue.serverTimestamp();
      updateData.dueDate = dueDate;
    }

    await borrowerRef.update(updateData);

    // ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    const notificationResult = await sendApplicationStatusNotification(
      userId, 
      { ...borrowerData, ...updateData }, 
      action === 'approve' ? 'approved' : 'rejected'
    );

    console.log(`‚úÖ Application ${borrowerId} ${action}ed and notification sent:`, notificationResult);

    res.json({ 
      success: true, 
      message: `${action === 'approve' ? '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥' : '‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò'}‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`,
      notificationSent: notificationResult.success
    });

  } catch (error) {
    console.error(`‚ùå Error in application ${req.body.action}:`, error);
    res.status(500).json({ 
      success: false, 
      error: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå" 
    });
  }
}

module.exports = {
  handleSlipApproval,
  handleApplicationApproval
};
