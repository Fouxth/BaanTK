// ü§ñ LINE Auto-Reply Service for BaanTK
const { Client } = require("@line/bot-sdk");
const admin = require("firebase-admin");

// ‡πÇ‡∏´‡∏•‡∏î environment variables ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö local development
if (process.env.NODE_ENV !== 'production') {
  require('dotenv').config();
}

// LINE Bot Configuration
const LINE_CONFIG = {
  channelAccessToken: 
    process.env.LINE_CHANNEL_ACCESS_TOKEN || 
    process.env.CHANNEL_ACCESS_TOKEN ||
    "dummy-token-for-testing",
  channelSecret: 
    process.env.LINE_CHANNEL_SECRET || 
    process.env.CHANNEL_SECRET ||
    "dummy-secret-for-testing"
};

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô production)
if (process.env.NODE_ENV === 'production' && 
    (!LINE_CONFIG.channelAccessToken || !LINE_CONFIG.channelSecret ||
     LINE_CONFIG.channelAccessToken === "dummy-token-for-testing" ||
     LINE_CONFIG.channelSecret === "dummy-secret-for-testing")) {
  console.error("‚ùå LINE configuration missing! Please set environment variables:");
  console.error("- LINE_CHANNEL_ACCESS_TOKEN or CHANNEL_ACCESS_TOKEN");
  console.error("- LINE_CHANNEL_SECRET or CHANNEL_SECRET");
  throw new Error("LINE configuration is required in production");
}

console.log("üîß LINE Config loaded:", {
  hasAccessToken: !!LINE_CONFIG.channelAccessToken,
  hasSecret: !!LINE_CONFIG.channelSecret,
  tokenLength: LINE_CONFIG.channelAccessToken?.length || 0
});

const lineClient = new Client(LINE_CONFIG);

// Initialize Firebase if not already done
if (!admin.apps.length) {
  admin.initializeApp();
}
const db = admin.firestore();

// ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö multi-step conversation)
const userStates = new Map();

// Auto-reply messages - Enhanced with Flex Messages
const AUTO_REPLIES = {
  welcome: {
    type: "flex",
    altText: "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà BaanTK!",
    contents: {
      type: "bubble",
      hero: {
        type: "image",
        url: "https://cdn.discordapp.com/attachments/1109913143683076097/1391796924113354842/baan-tk2.jpg?ex=686d3365&is=686be1e5&hm=47f3cdc26841581ff25ca6ae3b00cdfd059cfaeaf87b154a7d97007084d72ac3&",
        size: "full",
        aspectRatio: "20:13",
        aspectMode: "cover"
      },
      body: {
        type: "box",
        layout: "vertical",
        contents: [
          {
            type: "text",
            text: "‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà BaanTK! üè†",
            weight: "bold",
            size: "xl",
            color: "#1DB446"
          },
          {
            type: "text",
            text: "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô",
            size: "md",
            color: "#666666",
            margin: "md"
          },
          {
            type: "separator",
            margin: "lg"
          },
          {
            type: "box",
            layout: "vertical",
            margin: "lg",
            spacing: "sm",
            contents: [
              {
                type: "text",
                text: "üìã ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏î‡πà‡∏ß‡∏ô ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡πÑ‡∏î‡πâ",
                size: "sm",
                color: "#333333"
              },
              {
                type: "text",
                text: "‚Ä¢ ‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô 1,000-50,000 ‡∏ö‡∏≤‡∏ó",
                size: "sm",
                color: "#666666"
              },
              {
                type: "text",
                text: "‚Ä¢ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏£‡πá‡∏ß",
                size: "sm",
                color: "#666666"
              }
            ]
          }
        ]
      },
      footer: {
        type: "box",
        layout: "vertical",
        spacing: "sm",
        contents: [
          {
            type: "button",
            style: "primary",
            height: "sm",
            action: {
              type: "postback",
              label: "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠",
              data: "action=register"
            }
          },
          {
            type: "button",
            style: "secondary",
            height: "sm",
            action: {
              type: "postback",
              label: "‡∏î‡∏π‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
              data: "action=menu"
            }
          }
        ]
      }
    }
  },

  mainMenu: {
    type: "flex",
    altText: "‡πÄ‡∏°‡∏ô‡∏π‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ BaanTK",
    contents: {
      type: "carousel",
      contents: [
        {
          type: "bubble",
          hero: {
            type: "image",
            url: "https://via.placeholder.com/1040x585/1DB446/FFFFFF?text=üìù+‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠",
            size: "full",
            aspectRatio: "20:13",
            aspectMode: "cover"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "üìù ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠",
                weight: "bold",
                size: "lg",
                color: "#1DB446"
              },
              {
                type: "text",
                text: "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏á‡πà‡∏≤‡∏¢ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏£‡πá‡∏ß ‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô 1,000-50,000 ‡∏ö‡∏≤‡∏ó",
                size: "sm",
                color: "#666666",
                margin: "md",
                wrap: true
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "button",
                style: "primary",
                action: {
                  type: "uri",
                  label: "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏•‡∏¢",
                  uri: "https://baan-tk.web.app/liff-register.html"
                }
              }
            ]
          }
        },
        {
          type: "bubble",
          hero: {
            type: "image",
            url: "https://via.placeholder.com/1040x585/FF6B35/FFFFFF?text=üîç+‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞",
            size: "full",
            aspectRatio: "20:13",
            aspectMode: "cover"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞",
                weight: "bold",
                size: "lg",
                color: "#FF6B35"
              },
              {
                type: "text",
                text: "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÅ‡∏•‡∏∞‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
                size: "sm",
                color: "#666666",
                margin: "md",
                wrap: true
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "button",
                style: "primary",
                action: {
                  type: "postback",
                  label: "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö",
                  data: "action=check_status"
                }
              }
            ]
          }
        },
        {
          type: "bubble",
          hero: {
            type: "image",
            url: "https://via.placeholder.com/1040x585/4ECDC4/FFFFFF?text=üí∞+‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
            size: "full",
            aspectRatio: "20:13",
            aspectMode: "cover"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "üí∞ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
                weight: "bold",
                size: "lg",
                color: "#4ECDC4"
              },
              {
                type: "text",
                text: "‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡∏∞‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞",
                size: "sm",
                color: "#666666",
                margin: "md",
                wrap: true
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "button",
                style: "primary",
                action: {
                  type: "postback",
                  label: "‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ",
                  data: "action=payment"
                }
              }
            ]
          }
        },
        {
          type: "bubble",
          hero: {
            type: "image",
            url: "https://via.placeholder.com/1040x585/9B59B6/FFFFFF?text=üìã+‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
            size: "full",
            aspectRatio: "20:13",
            aspectMode: "cover"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "üìã ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
                weight: "bold",
                size: "lg",
                color: "#9B59B6"
              },
              {
                type: "text",
                text: "‡∏î‡∏π‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
                size: "sm",
                color: "#666666",
                margin: "md",
                wrap: true
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "button",
                style: "primary",
                action: {
                  type: "postback",
                  label: "‡∏î‡∏π‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç",
                  data: "action=terms"
                }
              }
            ]
          }
        },
        {
          type: "bubble",
          hero: {
            type: "image",
            url: "https://via.placeholder.com/1040x585/E67E22/FFFFFF?text=üìû+‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà",
            size: "full",
            aspectRatio: "20:13",
            aspectMode: "cover"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà",
                weight: "bold",
                size: "lg",
                color: "#E67E22"
              },
              {
                type: "text",
                text: "‡πÇ‡∏ó‡∏£ LINE Email ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô",
                size: "sm",
                color: "#666666",
                margin: "md",
                wrap: true
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "button",
                style: "primary",
                action: {
                  type: "postback",
                  label: "‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠",
                  data: "action=contact"
                }
              }
            ]
          }
        },
        {
          type: "bubble",
          hero: {
            type: "image",
            url: "https://via.placeholder.com/1040x585/3498DB/FFFFFF?text=üè†+‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤",
            size: "full",
            aspectRatio: "20:13",
            aspectMode: "cover"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "üè† ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö BaanTK",
                weight: "bold",
                size: "lg",
                color: "#3498DB"
              },
              {
                type: "text",
                text: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡πÅ‡∏•‡∏∞‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£",
                size: "sm",
                color: "#666666",
                margin: "md",
                wrap: true
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "button",
                style: "primary",
                action: {
                  type: "postback",
                  label: "‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏£‡∏≤",
                  data: "action=about"
                }
              }
            ]
          }
        }
      ]
    }
  },

  register: {
    type: "flex",
    altText: "‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠ BaanTK",
    contents: {
      type: "bubble",
      body: {
        type: "box",
        layout: "vertical",
        contents: [
          {
            type: "text",
            text: "üìù ‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠ BaanTK",
            weight: "bold",
            size: "xl",
            color: "#1DB446"
          },
          {
            type: "separator",
            margin: "md"
          },
          {
            type: "box",
            layout: "vertical",
            margin: "lg",
            spacing: "sm",
            contents: [
              {
                type: "text",
                text: "üí° ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°:",
                weight: "bold",
                size: "md",
                color: "#333333"
              },
              {
                type: "text",
                text: "‚Ä¢ ‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô",
                size: "sm",
                color: "#666666"
              },
              {
                type: "text",
                text: "‚Ä¢ ‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà",
                size: "sm",
                color: "#666666"
              },
              {
                type: "text",
                text: "‚Ä¢ ‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ",
                size: "sm",
                color: "#666666"
              }
            ]
          }
        ]
      },
      footer: {
        type: "box",
        layout: "vertical",
        spacing: "sm",
        contents: [
          {
            type: "button",
            style: "primary",
            height: "sm",
            action: {
              type: "uri",
              label: "‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏•‡∏¢",
              uri: "https://baan-tk.web.app/liff-register.html"
            }
          },
          {
            type: "button",
            style: "secondary",
            height: "sm",
            action: {
              type: "postback",
              label: "‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π",
              data: "action=menu"
            }
          }
        ]
      }
    }
  },

  contact: {
    type: "flex",
    altText: "‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà BaanTK",
    contents: {
      type: "bubble",
      body: {
        type: "box",
        layout: "vertical",
        contents: [
          {
            type: "text",
            text: "üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà",
            weight: "bold",
            size: "xl",
            color: "#FF6B35"
          },
          {
            type: "separator",
            margin: "md"
          },
          {
            type: "box",
            layout: "vertical",
            margin: "lg",
            spacing: "md",
            contents: [
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "‡πÇ‡∏ó‡∏£:",
                    color: "#aaaaaa",
                    size: "sm",
                    flex: 1
                  },
                  {
                    type: "text",
                    text: "02-123-4567",
                    wrap: true,
                    color: "#1DB446",
                    size: "sm",
                    flex: 3
                  }
                ]
              },
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "LINE:",
                    color: "#aaaaaa",
                    size: "sm",
                    flex: 1
                  },
                  {
                    type: "text",
                    text: "@baantk",
                    wrap: true,
                    color: "#1DB446",
                    size: "sm",
                    flex: 3
                  }
                ]
              },
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "Email:",
                    color: "#aaaaaa",
                    size: "sm",
                    flex: 1
                  },
                  {
                    type: "text",
                    text: "info@baantk.com",
                    wrap: true,
                    color: "#1DB446",
                    size: "sm",
                    flex: 3
                  }
                ]
              },
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "‡πÄ‡∏ß‡∏•‡∏≤:",
                    color: "#aaaaaa",
                    size: "sm",
                    flex: 1
                  },
                  {
                    type: "text",
                    text: "‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå-‡∏®‡∏∏‡∏Å‡∏£‡πå 8:00-17:00",
                    wrap: true,
                    color: "#666666",
                    size: "sm",
                    flex: 3
                  }
                ]
              }
            ]
          }
        ]
      },
      footer: {
        type: "box",
        layout: "vertical",
        contents: [
          {
            type: "button",
            style: "primary",
            action: {
              type: "uri",
              label: "‡πÇ‡∏ó‡∏£‡πÄ‡∏•‡∏¢",
              uri: "tel:021234567"
            }
          }
        ]
      }
    }
  },

  terms: {
    type: "flex",
    altText: "‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ BaanTK",
    contents: {
      type: "bubble",
      header: {
        type: "box",
        layout: "vertical",
        contents: [
          {
            type: "text",
            text: "üìã ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
            weight: "bold",
            size: "xl",
            color: "#9B59B6",
            align: "center"
          }
        ],
        paddingBottom: "md"
      },
      body: {
        type: "box",
        layout: "vertical",
        contents: [
          {
            type: "box",
            layout: "vertical",
            spacing: "md",
            contents: [
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "üî∏",
                    color: "#9B59B6",
                    size: "sm",
                    flex: 0
                  },
                  {
                    type: "text",
                    text: "‡∏≠‡∏≤‡∏¢‡∏∏ 20-65 ‡∏õ‡∏µ ‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡∏à‡∏≥",
                    wrap: true,
                    color: "#333333",
                    size: "sm",
                    flex: 1
                  }
                ]
              },
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "üî∏",
                    color: "#9B59B6",
                    size: "sm",
                    flex: 0
                  },
                  {
                    type: "text",
                    text: "‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô 1,000-50,000 ‡∏ö‡∏≤‡∏ó",
                    wrap: true,
                    color: "#333333",
                    size: "sm",
                    flex: 1
                  }
                ]
              },
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "üî∏",
                    color: "#9B59B6",
                    size: "sm",
                    flex: 0
                  },
                  {
                    type: "text",
                    text: "‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ 10-20% ‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
                    wrap: true,
                    color: "#333333",
                    size: "sm",
                    flex: 1
                  }
                ]
              },
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "üî∏",
                    color: "#9B59B6",
                    size: "sm",
                    flex: 0
                  },
                  {
                    type: "text",
                    text: "‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ú‡πà‡∏≠‡∏ô 1-12 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô",
                    wrap: true,
                    color: "#333333",
                    size: "sm",
                    flex: 1
                  }
                ]
              },
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "üî∏",
                    color: "#9B59B6",
                    size: "sm",
                    flex: 0
                  },
                  {
                    type: "text",
                    text: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏°‡πÅ‡∏≠‡∏ö‡πÅ‡∏ù‡∏á",
                    wrap: true,
                    color: "#333333",
                    size: "sm",
                    flex: 1
                  }
                ]
              }
            ]
          }
        ]
      },
      footer: {
        type: "box",
        layout: "vertical",
        spacing: "sm",
        contents: [
          {
            type: "button",
            style: "primary",
            height: "sm",
            action: {
              type: "postback",
              label: "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏•‡∏¢",
              data: "action=register"
            }
          },
          {
            type: "button",
            style: "secondary",
            height: "sm",
            action: {
              type: "postback",
              label: "‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π",
              data: "action=menu"
            }
          }
        ]
      }
    }
  },

  about: {
    type: "flex",
    altText: "‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö BaanTK",
    contents: {
      type: "bubble",
      hero: {
        type: "image",
        url: "https://baan-tk.web.app/baan-tk.png",
        size: "full",
        aspectRatio: "20:13",
        aspectMode: "cover"
      },
      body: {
        type: "box",
        layout: "vertical",
        contents: [
          {
            type: "text",
            text: "üè† BaanTK",
            weight: "bold",
            size: "xl",
            color: "#3498DB"
          },
          {
            type: "text",
            text: "‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏î‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ñ‡∏∑‡∏≠‡πÑ‡∏î‡πâ",
            size: "md",
            color: "#666666",
            margin: "md"
          },
          {
            type: "separator",
            margin: "lg"
          },
          {
            type: "box",
            layout: "vertical",
            margin: "lg",
            spacing: "sm",
            contents: [
              {
                type: "text",
                text: "‚ú® ‡∏à‡∏∏‡∏î‡πÄ‡∏î‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤:",
                weight: "bold",
                size: "md",
                color: "#3498DB"
              },
              {
                type: "text",
                text: "‚Ä¢ ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏ß‡πà‡∏≤ 10 ‡∏õ‡∏µ",
                size: "sm",
                color: "#666666"
              },
              {
                type: "text",
                text: "‚Ä¢ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏£‡πá‡∏ß ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á",
                size: "sm",
                color: "#666666"
              },
              {
                type: "text",
                text: "‚Ä¢ ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ 24/7",
                size: "sm",
                color: "#666666"
              },
              {
                type: "text",
                text: "‚Ä¢ ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡∏°‡∏µ‡πÉ‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï",
                size: "sm",
                color: "#666666"
              }
            ]
          }
        ]
      },
      footer: {
        type: "box",
        layout: "vertical",
        spacing: "sm",
        contents: [
          {
            type: "button",
            style: "primary",
            height: "sm",
            action: {
              type: "uri",
              label: "‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ä‡∏°‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå",
              uri: "https://baan-tk.web.app"
            }
          },
          {
            type: "button",
            style: "secondary",
            height: "sm",
            action: {
              type: "postback",
              label: "‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π",
              data: "action=menu"
            }
          }
        ]
      }
    }
  },

  status: {
    type: "flex",
    altText: "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£ BaanTK",
    contents: {
      type: "bubble",
      body: {
        type: "box",
        layout: "vertical",
        contents: [
          {
            type: "text",
            text: "üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£",
            weight: "bold",
            size: "xl",
            color: "#FF6B35"
          },
          {
            type: "separator",
            margin: "md"
          },
          {
            type: "box",
            layout: "vertical",
            margin: "lg",
            spacing: "md",
            contents: [
              {
                type: "text",
                text: "üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:",
                weight: "bold",
                size: "md",
                color: "#333333"
              },
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "1.",
                    color: "#FF6B35",
                    size: "sm",
                    flex: 0,
                    weight: "bold"
                  },
                  {
                    type: "text",
                    text: "‡∏™‡πà‡∏á‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô 13 ‡∏´‡∏•‡∏±‡∏Å",
                    wrap: true,
                    color: "#666666",
                    size: "sm",
                    flex: 1
                  }
                ]
              },
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "2.",
                    color: "#FF6B35",
                    size: "sm",
                    flex: 0,
                    weight: "bold"
                  },
                  {
                    type: "text",
                    text: "‡∏£‡∏≠‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö",
                    wrap: true,
                    color: "#666666",
                    size: "sm",
                    flex: 1
                  }
                ]
              },
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "3.",
                    color: "#FF6B35",
                    size: "sm",
                    flex: 0,
                    weight: "bold"
                  },
                  {
                    type: "text",
                    text: "‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏™‡∏á‡∏™‡∏±‡∏¢",
                    wrap: true,
                    color: "#666666",
                    size: "sm",
                    flex: 1
                  }
                ]
              }
            ]
          }
        ]
      },
      footer: {
        type: "box",
        layout: "vertical",
        spacing: "sm",
        contents: [
          {
            type: "button",
            style: "primary",
            height: "sm",
            action: {
              type: "postback",
              label: "‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà",
              data: "action=contact"
            }
          },
          {
            type: "button",
            style: "secondary",
            height: "sm",
            action: {
              type: "postback",
              label: "‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π",
              data: "action=menu"
            }
          }
        ]
      }
    }
  },

  payment: {
    type: "flex",
    altText: "‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô BaanTK",
    contents: {
      type: "bubble",
      body: {
        type: "box",
        layout: "vertical",
        contents: [
          {
            type: "text",
            text: "üí∞ ‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô",
            weight: "bold",
            size: "xl",
            color: "#4ECDC4"
          },
          {
            type: "separator",
            margin: "md"
          },
          {
            type: "box",
            layout: "vertical",
            margin: "lg",
            spacing: "md",
            contents: [
              {
                type: "text",
                text: "üì∏ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á:",
                weight: "bold",
                size: "md",
                color: "#333333"
              },
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "‚úì",
                    color: "#4ECDC4",
                    size: "sm",
                    flex: 0,
                    weight: "bold"
                  },
                  {
                    type: "text",
                    text: "‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏•‡∏¥‡∏õ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô",
                    wrap: true,
                    color: "#666666",
                    size: "sm",
                    flex: 1
                  }
                ]
              },
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "‚úì",
                    color: "#4ECDC4",
                    size: "sm",
                    flex: 0,
                    weight: "bold"
                  },
                  {
                    type: "text",
                    text: "‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÇ‡∏≠‡∏ô",
                    wrap: true,
                    color: "#666666",
                    size: "sm",
                    flex: 1
                  }
                ]
              },
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "‚úì",
                    color: "#4ECDC4",
                    size: "sm",
                    flex: 0,
                    weight: "bold"
                  },
                  {
                    type: "text",
                    text: "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞",
                    wrap: true,
                    color: "#666666",
                    size: "sm",
                    flex: 1
                  }
                ]
              },
              {
                type: "box",
                layout: "baseline",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "‚úì",
                    color: "#4ECDC4",
                    size: "sm",
                    flex: 0,
                    weight: "bold"
                  },
                  {
                    type: "text",
                    text: "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏™‡∏±‡∏ç‡∏ç‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)",
                    wrap: true,
                    color: "#666666",
                    size: "sm",
                    flex: 1
                  }
                ]
              }
            ]
          }
        ]
      },
      footer: {
        type: "box",
        layout: "vertical",
        spacing: "sm",
        contents: [
          {
            type: "button",
            style: "primary",
            height: "sm",
            action: {
              type: "postback",
              label: "‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà",
              data: "action=contact"
            }
          },
          {
            type: "button",
            style: "secondary",
            height: "sm",
            action: {
              type: "postback",
              label: "‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π",
              data: "action=menu"
            }
          }
        ]
      }
    }
  },

  // Simple text replies for compatibility  
  greeting: [
    "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà BaanTK üè†",
    "‡∏û‡∏ß‡∏Å‡πÄ‡∏£‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏î‡πà‡∏ß‡∏ô",
    "‡∏Å‡∏î‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå '‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
  ],
  
  default: [
    "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì üòÖ",
    "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå '‡πÄ‡∏°‡∏ô‡∏π' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
  ]
};

// Rich Menu Configuration
const RICH_MENU_CONFIG = {
  size: {
    width: 2500,
    height: 1686
  },
  selected: false,
  name: "BaanTK Main Menu",
  chatBarText: "‡πÄ‡∏°‡∏ô‡∏π",
  areas: [
    {
      bounds: { x: 0, y: 0, width: 833, height: 843 },
      action: { type: "postback", data: "action=register" }
    },
    {
      bounds: { x: 833, y: 0, width: 834, height: 843 },
      action: { type: "postback", data: "action=check_status" }
    },
    {
      bounds: { x: 1667, y: 0, width: 833, height: 843 },
      action: { type: "postback", data: "action=payment" }
    },
    {
      bounds: { x: 0, y: 843, width: 833, height: 843 },
      action: { type: "postback", data: "action=contact" }
    },
    {
      bounds: { x: 833, y: 843, width: 834, height: 843 },
      action: { type: "postback", data: "action=terms" }
    },
    {
      bounds: { x: 1667, y: 843, width: 833, height: 843 },
      action: { type: "postback", data: "action=about" }
    }
  ]
};

// Function to create Rich Menu
async function createRichMenu() {
  try {
    // Create rich menu
    const richMenu = await lineClient.createRichMenu(RICH_MENU_CONFIG);
    console.log(`‚úÖ Rich Menu created with ID: ${richMenu.richMenuId}`);
    
    // Note: You need to upload an image for the rich menu
    // This should be done via LINE Developers Console or API
    // The image should be 2500x1686 pixels
    
    return richMenu.richMenuId;
  } catch (error) {
    console.error("‚ùå Failed to create Rich Menu:", error);
    return null;
  }
}

// Function to set Rich Menu as default
async function setDefaultRichMenu(richMenuId) {
  try {
    await lineClient.setDefaultRichMenu(richMenuId);
    console.log(`‚úÖ Set Rich Menu ${richMenuId} as default`);
    return true;
  } catch (error) {
    console.error("‚ùå Failed to set default Rich Menu:", error);
    return false;
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏™‡∏•‡∏µ‡∏õ
async function sendSlipApprovalNotification(userId, slipData, approvalStatus) {
  try {
    let message;
    
    if (approvalStatus === 'approved') {
      message = {
        type: "flex",
        altText: "‡∏™‡∏•‡∏µ‡∏õ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
        contents: {
          type: "bubble",
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "‚úÖ ‡∏™‡∏•‡∏µ‡∏õ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
                weight: "bold",
                size: "lg",
                color: "#1DB446"
              },
              {
                type: "separator",
                margin: "md"
              },
              {
                type: "box",
                layout: "vertical",
                margin: "lg",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! ‡∏™‡∏•‡∏µ‡∏õ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß",
                    wrap: true,
                    color: "#333333",
                    size: "md"
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    margin: "lg",
                    contents: [
                      {
                        type: "text",
                        text: "üí∞ ‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞:",
                        color: "#666666",
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: `${slipData.amount || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'} ‡∏ö‡∏≤‡∏ó`,
                        color: "#1DB446",
                        size: "sm",
                        flex: 3,
                        weight: "bold"
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥:",
                        color: "#666666",
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: new Date().toLocaleDateString('th-TH'),
                        color: "#333333",
                        size: "sm",
                        flex: 3
                      }
                    ]
                  }
                ]
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            spacing: "sm",
            contents: [
              {
                type: "button",
                style: "primary",
                height: "sm",
                action: {
                  type: "postback",
                  label: "‡∏î‡∏π‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞",
                  data: "action=check_status"
                }
              },
              {
                type: "button",
                style: "secondary",
                height: "sm",
                action: {
                  type: "postback",
                  label: "‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π",
                  data: "action=menu"
                }
              }
            ]
          }
        }
      };
    } else {
      message = {
        type: "flex",
        altText: "‡∏™‡∏•‡∏µ‡∏õ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
        contents: {
          type: "bubble",
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "‚ùå ‡∏™‡∏•‡∏µ‡∏õ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
                weight: "bold",
                size: "lg",
                color: "#E74C3C"
              },
              {
                type: "separator",
                margin: "md"
              },
              {
                type: "box",
                layout: "vertical",
                margin: "lg",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "‡πÄ‡∏™‡∏µ‡∏¢‡πÉ‡∏à‡∏î‡πâ‡∏ß‡∏¢ ‡∏™‡∏•‡∏µ‡∏õ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
                    wrap: true,
                    color: "#333333",
                    size: "md"
                  },
                  {
                    type: "text",
                    text: "üí° ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ:",
                    weight: "bold",
                    color: "#E74C3C",
                    size: "sm",
                    margin: "lg"
                  },
                  {
                    type: "text",
                    text: "‚Ä¢ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏™‡∏•‡∏µ‡∏õ‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô\n‚Ä¢ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞\n‚Ä¢ ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå",
                    wrap: true,
                    color: "#666666",
                    size: "sm"
                  }
                ]
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            spacing: "sm",
            contents: [
              {
                type: "button",
                style: "primary",
                height: "sm",
                action: {
                  type: "postback",
                  label: "‡∏™‡πà‡∏á‡∏™‡∏•‡∏µ‡∏õ‡πÉ‡∏´‡∏°‡πà",
                  data: "action=payment"
                }
              },
              {
                type: "button",
                style: "secondary",
                height: "sm",
                action: {
                  type: "postback",
                  label: "‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà",
                  data: "action=contact"
                }
              }
            ]
          }
        }
      };
    }

    await lineClient.pushMessage(userId, message);
    console.log(`‚úÖ Sent slip ${approvalStatus} notification to user ${userId}`);
    return { success: true };
    
  } catch (error) {
    console.error(`‚ùå Failed to send slip ${approvalStatus} notification:`, error);
    return { success: false, error: error.message };
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥/‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£
async function sendApplicationStatusNotification(userId, borrowerData, approvalStatus) {
  try {
    let message;
    
    if (approvalStatus === 'approved') {
      const loanAmount = borrowerData.totalLoan || borrowerData.amount || 0;
      const interestRate = borrowerData.interestRate || 15; // ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ 15% ‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
      const totalDue = loanAmount + (loanAmount * (interestRate / 100));
      const applicantName = borrowerData.fullName || borrowerData.firstName || '‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£';
      const dueDate = borrowerData.dueDate?.toDate?.()?.toLocaleDateString('th-TH') || 
                     new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toLocaleDateString('th-TH');
      
      message = {
        type: "flex",
        altText: `üéâ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß! ‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô ${loanAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
        contents: {
          type: "bubble",
          header: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢!",
                weight: "bold",
                size: "xxl",
                color: "#1DB446",
                align: "center"
              },
              {
                type: "text",
                text: "‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
                size: "md",
                color: "#1DB446",
                align: "center",
                margin: "sm"
              }
            ],
            backgroundColor: "#F8F9FA",
            paddingAll: "20px"
          },
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "box",
                layout: "vertical",
                spacing: "md",
                contents: [
                  {
                    type: "text",
                    text: `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì ${applicantName}`,
                    weight: "bold",
                    size: "lg",
                    color: "#333333"
                  },
                  {
                    type: "text",
                    text: "‡∏Ç‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏¥‡∏ô‡∏î‡∏µ! ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß",
                    wrap: true,
                    color: "#666666",
                    size: "sm",
                    margin: "md"
                  }
                ]
              },
              {
                type: "separator",
                margin: "xl"
              },
              {
                type: "box",
                layout: "vertical",
                margin: "xl",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "üí∞ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥:",
                    weight: "bold",
                    size: "md",
                    color: "#1DB446"
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    margin: "md",
                    contents: [
                      {
                        type: "text",
                        text: "‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:",
                        color: "#666666",
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: `${loanAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
                        color: "#1DB446",
                        size: "lg",
                        flex: 3,
                        weight: "bold"
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢:",
                        color: "#666666",
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: `${interestRate}% ‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô`,
                        color: "#E74C3C",
                        size: "sm",
                        flex: 3,
                        weight: "bold"
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞:",
                        color: "#666666",
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: `${totalDue.toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
                        color: "#E74C3C",
                        size: "sm",
                        flex: 3,
                        weight: "bold"
                      }
                    ]
                  },
                  {
                    type: "box",
                    layout: "baseline",
                    spacing: "sm",
                    contents: [
                      {
                        type: "text",
                        text: "‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î:",
                        color: "#666666",
                        size: "sm",
                        flex: 2
                      },
                      {
                        type: "text",
                        text: dueDate,
                        color: "#E74C3C",
                        size: "sm",
                        flex: 3,
                        weight: "bold"
                      }
                    ]
                  }
                ]
              },
              {
                type: "separator",
                margin: "xl"
              },
              {
                type: "box",
                layout: "vertical",
                margin: "xl",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: "‚öñÔ∏è ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏°:",
                    weight: "bold",
                    size: "md",
                    color: "#E74C3C"
                  },
                  {
                    type: "text",
                    text: "1. ‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡πÅ‡∏•‡∏∞‡∏ï‡∏Å‡∏•‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏\n\n2. ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏ä‡∏≥‡∏£‡∏∞‡∏ï‡∏≤‡∏°‡∏Å‡∏≥‡∏´‡∏ô‡∏î ‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡∏µ‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Ñ‡∏î‡∏µ‡∏ï‡∏≤‡∏°‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢\n\n3. ‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡∏™‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ü‡πâ‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏ï‡πâ‡πÅ‡∏¢‡πâ‡∏á‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î\n\n4. ‡∏Ç‡πâ‡∏≤‡∏û‡πÄ‡∏à‡πâ‡∏≤‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏ß‡∏á‡∏ñ‡∏≤‡∏°‡∏´‡∏ô‡∏µ‡πâ‡∏ï‡∏≤‡∏°‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢",
                    wrap: true,
                    color: "#666666",
                    size: "xs",
                    margin: "md"
                  }
                ]
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            spacing: "sm",
            contents: [
              {
                type: "button",
                style: "primary",
                height: "sm",
                color: "#1DB446",
                action: {
                  type: "postback",
                  label: "‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏•‡∏á‡∏ô‡∏≤‡∏°‡∏™‡∏±‡∏ç‡∏ç‡∏≤",
                  data: `action=confirm_loan&borrowerId=${borrowerData.id || 'unknown'}&amount=${loanAmount}`
                }
              },
              {
                type: "button",
                style: "secondary",
                height: "sm",
                action: {
                  type: "postback",
                  label: "üìÑ ‡∏î‡∏π‡πÉ‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÄ‡∏ï‡πá‡∏°",
                  data: `action=view_contract&borrowerId=${borrowerData.id || 'unknown'}`
                }
              },
              {
                type: "button",
                style: "link",
                height: "sm",
                action: {
                  type: "postback",
                  label: "üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà",
                  data: "action=contact"
                }
              }
            ]
          }
        }
      };
    } else {
      message = {
        type: "flex",
        altText: "‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
        contents: {
          type: "bubble",
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "‚ùå ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥",
                weight: "bold",
                size: "lg",
                color: "#E74C3C"
              },
              {
                type: "separator",
                margin: "md"
              },
              {
                type: "box",
                layout: "vertical",
                margin: "lg",
                spacing: "sm",
                contents: [
                  {
                    type: "text",
                    text: `‡πÄ‡∏™‡∏µ‡∏¢‡πÉ‡∏à‡∏î‡πâ‡∏ß‡∏¢ ‡∏Ñ‡∏∏‡∏ì${borrowerData.firstName || ''} ${borrowerData.lastName || ''}`,
                    weight: "bold",
                    color: "#333333",
                    size: "md"
                  },
                  {
                    type: "text",
                    text: "‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏µ‡πâ",
                    wrap: true,
                    color: "#666666",
                    size: "sm",
                    margin: "md"
                  },
                  ...(borrowerData.rejectionReason ? [{
                    type: "text",
                    text: "üìù ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:",
                    weight: "bold",
                    color: "#E74C3C",
                    size: "sm",
                    margin: "lg"
                  },
                  {
                    type: "text",
                    text: borrowerData.rejectionReason,
                    wrap: true,
                    color: "#666666",
                    size: "sm"
                  }] : []),
                  {
                    type: "text",
                    text: "üí° ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ:",
                    weight: "bold",
                    color: "#E74C3C",
                    size: "sm",
                    margin: "lg"
                  },
                  {
                    type: "text",
                    text: "‚Ä¢ ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏´‡∏°‡πà\n‚Ä¢ ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°\n‚Ä¢ ‡∏•‡∏≠‡∏á‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï",
                    wrap: true,
                    color: "#666666",
                    size: "sm"
                  }
                ]
              }
            ]
          },
          footer: {
            type: "box",
            layout: "vertical",
            spacing: "sm",
            contents: [
              {
                type: "button",
                style: "primary",
                height: "sm",
                action: {
                  type: "postback",
                  label: "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏´‡∏°‡πà",
                  data: "action=register"
                }
              },
              {
                type: "button",
                style: "secondary",
                height: "sm",
                action: {
                  type: "postback",
                  label: "‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà",
                  data: "action=contact"
                }
              }
            ]
          }
        }
      };
    }

    await lineClient.pushMessage(userId, message);
    console.log(`‚úÖ Sent application ${approvalStatus} notification to user ${userId}`);
    return { success: true };
    
  } catch (error) {
    console.error(`‚ùå Failed to send application ${approvalStatus} notification:`, error);
    return { success: false, error: error.message };
  }
}

// Verify LINE webhook signature
function verifySignature(body, signature) {
  const crypto = require("crypto");
  const channelSecret = LINE_CONFIG.channelSecret;
  
  const hash = crypto
    .createHmac("sha256", channelSecret)
    .update(body)
    .digest("base64");
  
  return hash === signature;
}

// Process incoming LINE messages
async function processLineMessage(userId, messageText, replyToken) {
  console.log(`üì± LINE Message from ${userId}: ${messageText}`);
  
  const lowerText = messageText.toLowerCase().trim();
  let response = null;

  // Determine response based on message content
  if (lowerText.includes("‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ") || lowerText.includes("hello") || lowerText.includes("hi")) {
    response = AUTO_REPLIES.greeting;
  } else if (lowerText.includes("‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠") || lowerText.includes("help") || lowerText.includes("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á") || 
             lowerText.includes("‡πÄ‡∏°‡∏ô‡∏π") || lowerText.includes("menu")) {
    response = AUTO_REPLIES.mainMenu;
  } else if (lowerText.includes("‡∏™‡∏°‡∏±‡∏Ñ‡∏£") || lowerText.includes("register") || lowerText.includes("‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô")) {
    response = AUTO_REPLIES.register;
  } else if (lowerText.includes("‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞") || lowerText.includes("status") || lowerText.includes("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö")) {
    response = await generateStatusMessage(userId);
  } else if (lowerText.includes("‡∏ä‡∏≥‡∏£‡∏∞") || lowerText.includes("payment") || lowerText.includes("‡πÇ‡∏≠‡∏ô") || lowerText.includes("‡∏™‡∏•‡∏¥‡∏õ")) {
    response = AUTO_REPLIES.payment;
  } else if (lowerText.includes("‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠") || lowerText.includes("contact") || lowerText.includes("‡πÇ‡∏ó‡∏£")) {
    response = AUTO_REPLIES.contact;
  } else if (lowerText.includes("‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç") || lowerText.includes("terms") || lowerText.includes("‡∏Ç‡πâ‡∏≠‡∏ï‡∏Å‡∏•‡∏á")) {
    response = AUTO_REPLIES.terms;
  } else if (lowerText.includes("‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö") || lowerText.includes("about") || lowerText.includes("‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó")) {
    response = AUTO_REPLIES.about;
  } else {
    response = AUTO_REPLIES.default;
  }

  // Send reply
  try {
    await sendReplyMessage(replyToken, response);
    return { success: true, reply: response };
  } catch (error) {
    console.error("‚ùå Error sending reply:", error);
    return { success: false, error: error.message };
  }
}

// Process postback events (from buttons)
async function processPostbackEvent(userId, data, replyToken) {
  console.log(`üîò Postback from ${userId}: ${data}`);

  // Parse action and parameters from postback data
  const parts = data.split('&');
  const action = parts[0].split('=')[1] || data;
  const params = {};
  
  // Parse additional parameters
  parts.slice(1).forEach(part => {
    const [key, value] = part.split('=');
    if (key && value) {
      params[key] = decodeURIComponent(value);
    }
  });

  let response = null;
  
  // Determine response based on postback action
  if (action === "register") {
    response = AUTO_REPLIES.register;
  } else if (action === "menu") {
    response = AUTO_REPLIES.mainMenu;
  } else if (action === "check_status") {
    response = await generateStatusMessage(userId);
  } else if (action === "payment") {
    response = AUTO_REPLIES.payment;
  } else if (action === "contact") {
    response = AUTO_REPLIES.contact;
  } else if (action === "terms") {
    response = AUTO_REPLIES.terms;
  } else if (action === "about") {
    response = AUTO_REPLIES.about;
  } else if (action === "confirm_loan") {
    // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏•‡∏á‡∏ô‡∏≤‡∏°‡∏™‡∏±‡∏ç‡∏ç‡∏≤
    response = await processLoanConfirmation(userId, params);
  } else if (action === "view_contract") {
    // ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÄ‡∏ï‡πá‡∏°
    response = await generateContractView(userId, params);
  } else {
    response = AUTO_REPLIES.default;
  }

  // Send reply
  try {
    await sendReplyMessage(replyToken, response);
    return { success: true, reply: response };
  } catch (error) {
    console.error("‚ùå Error sending postback reply:", error);
    return { success: false, error: error.message };
  }
}

// Send appropriate reply based on user input
// Send reply message (for direct testing)
async function sendReplyMessage(replyToken, response) {
  try {
    if (process.env.NODE_ENV !== 'production') {
      // Mock mode for testing
      console.log(`üîÑ Mock Reply - Token: ${replyToken.substring(0, 10)}...`);
      console.log(`üìù Response Type: ${Array.isArray(response) ? 'text array' : typeof response}`);
      if (Array.isArray(response) && response.length > 0) {
        console.log(`üí¨ First message: ${response[0].substring(0, 100)}...`);
      }
      return { success: true, mock: true };
    }

    if (response.type === "flex") {
      await lineClient.replyMessage(replyToken, response);
      console.log(`‚úÖ Sent flex message`);
      return { success: true, messageType: "flex" };
    } else if (Array.isArray(response)) {
      const filteredMessages = response
        .filter(text => text && text.trim().length > 0)
        .slice(0, 5);
      
      const messages = filteredMessages.map(text => ({ type: "text", text }));
      await lineClient.replyMessage(replyToken, messages);
      console.log(`‚úÖ Sent ${messages.length} text messages`);
      return { success: true, messagesSent: messages.length };
    }
  } catch (error) {
    console.error("‚ùå Failed to send reply message:", error);
    return { success: false, error: error.message };
  }
}

// Send welcome message (for follow events)
async function sendWelcomeMessage(userId, replyToken) {
  try {
    const response = AUTO_REPLIES.welcome || AUTO_REPLIES.greeting;
    await sendReplyMessage(replyToken, response);
    console.log(`üëã Sent welcome message to ${userId}`);
    return { success: true };
  } catch (error) {
    console.error("‚ùå Failed to send welcome message:", error);
    return { success: false, error: error.message };
  }
}

// Process image message (for payment slips)
async function processImageMessage(userId, messageId, replyToken) {
  try {
    console.log(`üñºÔ∏è Processing image from ${userId}, message ID: ${messageId}`);
    
    // In production, this would download and process the image
    // For now, just send a confirmation message
    const response = [
      "üì∑ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß",
      "üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...",
      "‚úÖ ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏£‡∏≤‡∏ö‡πÄ‡∏£‡πá‡∏ß‡πÜ ‡∏ô‡∏µ‡πâ"
    ];
    
    await sendReplyMessage(replyToken, response);
    console.log(`‚úÖ Processed image message from ${userId}`);
    return { success: true, messageType: "image_processed" };
  } catch (error) {
    console.error("‚ùå Failed to process image message:", error);
    return { success: false, error: error.message };
  }
}

async function sendReply(event, input) {
  const userId = event.source.userId;
  let response = null;

  // Determine response based on message content or postback action
  if (input.includes("‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ") || input.includes("hello") || input.includes("hi")) {
    response = AUTO_REPLIES.greeting;
  } else if (input.includes("‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠") || input.includes("help") || input.includes("‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á") || 
             input.includes("‡πÄ‡∏°‡∏ô‡∏π") || input.includes("menu") || input === "menu") {
    response = AUTO_REPLIES.mainMenu;
  } else if (input.includes("‡∏™‡∏°‡∏±‡∏Ñ‡∏£") || input.includes("register") || input.includes("‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô") || input === "register") {
    response = AUTO_REPLIES.register;
  } else if (input.includes("‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞") || input.includes("status") || input.includes("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö") || input === "check_status") {
    response = await generateStatusMessage(userId);
  } else if (input.includes("‡∏ä‡∏≥‡∏£‡∏∞") || input.includes("payment") || input.includes("‡πÇ‡∏≠‡∏ô") || input === "payment") {
    response = AUTO_REPLIES.payment;
  } else if (input.includes("‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠") || input.includes("contact") || input.includes("‡πÇ‡∏ó‡∏£") || input === "contact") {
    response = AUTO_REPLIES.contact;
  } else if (input.includes("‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç") || input.includes("terms") || input.includes("‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢") || input === "terms") {
    response = AUTO_REPLIES.terms;
  } else if (input.includes("‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö") || input.includes("about") || input.includes("‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó") || input === "about") {
    response = AUTO_REPLIES.about;
  } else {
    response = AUTO_REPLIES.default;
  }

  // Send response
  try {
    if (response.type === "flex") {
      // Send Flex Message
      await lineClient.replyMessage(event.replyToken, response);
      console.log(`‚úÖ Sent flex message to ${userId}`);
      return { success: true, messageType: "flex" };
    } else if (Array.isArray(response)) {
      // Send text messages
      const filteredMessages = response
        .filter(text => text && text.trim().length > 0)
        .slice(0, 5);
      
      const messages = filteredMessages.map(text => ({ type: "text", text }));
      await lineClient.replyMessage(event.replyToken, messages);
      console.log(`‚úÖ Sent ${messages.length} text messages to ${userId}`);
      return { success: true, messagesSent: messages.length };
    }
  } catch (error) {
    console.error("‚ùå Failed to send LINE reply:", error);
    return { success: false, error: error.message };
  }

  return null;
}

// Process follow event (when user adds the bot)
async function processFollowEvent(event) {
  const userId = event.source.userId;
  
  console.log(`üëã New follower: ${userId}`);

  try {
    // Get user profile
    const profile = await lineClient.getProfile(userId);
    console.log(`üìù User profile: ${profile.displayName}`);

    // Send welcome flex message
    await lineClient.replyMessage(event.replyToken, AUTO_REPLIES.welcome);
    
    console.log(`‚úÖ Sent welcome flex message to ${profile.displayName} (${userId})`);
    
    return { success: true, userId, displayName: profile.displayName };
  } catch (error) {
    console.error("‚ùå Failed to process follow event:", error);
    return { success: false, error: error.message };
  }
}

// Process unfollow event (when user blocks/unfriends the bot)
async function processUnfollowEvent(event) {
  const userId = event.source.userId;
  
  console.log(`üëã User unfollowed: ${userId}`);
  
  try {
    return { success: true, userId };
  } catch (error) {
    console.error("‚ùå Failed to process unfollow event:", error);
    return { success: false, error: error.message };
  }
}

// Main event processor for all LINE events
async function processLineEvent(event) {
  console.log(`üì® LINE Event received: ${event.type}`);
  
  try {
    switch (event.type) {
      case "message":
        return await processLineMessage(event);
      
      case "postback":
        return await processPostbackEvent(event);
      
      case "follow":
        return await processFollowEvent(event);
      
      case "unfollow":
        return await processUnfollowEvent(event);
      
      default:
        console.log(`‚ÑπÔ∏è Unhandled event type: ${event.type}`);
        return { success: true, message: "Event type not handled" };
    }
  } catch (error) {
    console.error(`‚ùå Error processing LINE event:`, error);
    return { success: false, error: error.message };
  }
}

async function sendPushMessage(userId, messages) {
  try {
    const messageObjects = messages.map(text => ({ type: "text", text }));
    await lineClient.pushMessage(userId, messageObjects);
    console.log(`‚úÖ Sent push message to ${userId}`);
    return { success: true };
  } catch (error) {
    console.error("‚ùå Failed to send push message:", error);
    return { success: false, error: error.message };
  }
}

// Send broadcast message to all users
async function sendBroadcastMessage(messages) {
  try {
    const messageObjects = messages.map(text => ({ type: "text", text }));
    await lineClient.broadcast(messageObjects);
    console.log("‚úÖ Sent broadcast message");
    return { success: true };
  } catch (error) {
    console.error("‚ùå Failed to send broadcast message:", error);
    return { success: false, error: error.message };
  }
}

// Generate dynamic status message from database
async function generateStatusMessage(userId) {
  try {
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const borrowersSnapshot = await db.collection('borrowers')
      .where('lineUserId', '==', userId)
      .orderBy('timestamp', 'desc')
      .limit(1)
      .get();
    
    if (borrowersSnapshot.empty) {
      // ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£
      return {
        type: "flex",
        altText: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£",
        contents: {
          type: "bubble",
          body: {
            type: "box",
            layout: "vertical",
            contents: [
              {
                type: "text",
                text: "‚ùì ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£",
                weight: "bold",
                size: "xl",
                color: "#999999"
              },
              {
                type: "separator",
                margin: "md"
              },
              {
                type: "box",
                layout: "vertical",
                margin: "lg",
                spacing: "md",
                contents: [
                  {
                    type: "text",
                    text: "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö",
                    wrap: true,
                    color: "#666666",
                    size: "md"
                  },
                  {
                    type: "text",
                    text: "üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà",
                    wrap: true,
                    color: "#1DB446",
                    size: "sm",
                    margin: "lg",
                    weight: "bold"
                  },
                  {
                    type: "text",
                    text: "üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà:\n‡πÇ‡∏ó‡∏£: 02-123-4567 (‡∏à-‡∏® 8:00-17:00)\nLINE: @baantk\n‡∏≠‡∏µ‡πÄ‡∏°‡∏•: info@baantk.com",
                    wrap: true,
                    color: "#666666",
                    size: "sm",
                    margin: "md"
                  }
                ]
              }
            ]
          }
        }
      };
    }

    const borrowerData = borrowersSnapshot.docs[0].data();
    const borrowerId = borrowersSnapshot.docs[0].id;
    
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏•‡∏∞‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• + ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
    let statusText = "‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö";
    let statusColor = "#FFA500";
    let statusEmoji = "üîÑ";
    
    if (borrowerData.status === 'approved') {
      statusText = "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß";
      statusColor = "#1DB446";
      statusEmoji = "‚úÖ";
    } else if (borrowerData.status === 'rejected') {
      statusText = "‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥";
      statusColor = "#E74C3C";
      statusEmoji = "‚ùå";
    } else if (borrowerData.status === 'pending') {
      statusText = "‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö";
      statusColor = "#FFA500";
      statusEmoji = "üîÑ";
    } else if (borrowerData.status === 'under_review') {
      statusText = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö";
      statusColor = "#3498DB";
      statusEmoji = "üîç";
    } else if (borrowerData.status === 'processing') {
      statusText = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£";
      statusColor = "#9B59B6";
      statusEmoji = "‚öôÔ∏è";
    } else if (borrowerData.status === 'contract_ready') {
      statusText = "‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°";
      statusColor = "#1DB446";
      statusEmoji = "üìÑ";
    } else if (borrowerData.status === 'disbursed') {
      statusText = "‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß";
      statusColor = "#1DB446";
      statusEmoji = "üí∞";
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô
    const currentStatus = borrowerData.status;
    const isDisbursed = borrowerData.disbursed || currentStatus === 'disbursed';
    
    const steps = [
      { 
        status: "‚úÖ", 
        text: "‡∏¢‡∏∑‡πà‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô", 
        color: "#1DB446",
        completed: true
      },
      { 
        status: ['pending'].includes(currentStatus) ? "üîÑ" : "‚úÖ", 
        text: "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥", 
        color: ['pending'].includes(currentStatus) ? "#FFA500" : "#1DB446",
        completed: !['pending'].includes(currentStatus)
      },
      { 
        status: ['approved', 'contract_ready', 'disbursed'].includes(currentStatus) ? "‚úÖ" : 
                ['under_review', 'processing'].includes(currentStatus) ? "üîÑ" : "‚è≥", 
        text: "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏ó‡∏≥‡∏™‡∏±‡∏ç‡∏ç‡∏≤", 
        color: ['approved', 'contract_ready', 'disbursed'].includes(currentStatus) ? "#1DB446" : 
               ['under_review', 'processing'].includes(currentStatus) ? "#FFA500" : "#999999",
        completed: ['approved', 'contract_ready', 'disbursed'].includes(currentStatus)
      },
      { 
        status: isDisbursed ? "‚úÖ" : 
                ['approved', 'contract_ready'].includes(currentStatus) ? "üîÑ" : "‚è≥", 
        text: "‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ", 
        color: isDisbursed ? "#1DB446" : 
               ['approved', 'contract_ready'].includes(currentStatus) ? "#FFA500" : "#999999",
        completed: isDisbursed
      }
    ];

    // ‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏à‡∏≤‡∏Å database
    const applicationDate = borrowerData.timestamp?.toDate?.()?.toLocaleDateString('th-TH', {
      year: 'numeric',
      month: 'short', 
      day: 'numeric'
    }) || borrowerData.createdAt?.toDate?.()?.toLocaleDateString('th-TH', {
      year: 'numeric',
      month: 'short', 
      day: 'numeric'
    }) || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô
    const loanAmount = borrowerData.totalLoan || borrowerData.requestedAmount || borrowerData.amount || 0;
    const applicantName = borrowerData.fullName || borrowerData.firstName || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    const phoneNumber = borrowerData.phoneNumber || borrowerData.phone || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';

    return {
      type: "flex",
      altText: `‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£: ${statusText} (${applicantName})`,
      contents: {
        type: "bubble",
        body: {
          type: "box",
          layout: "vertical",
          contents: [
            {
              type: "text",
              text: "üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠",
              weight: "bold",
              size: "xl",
              color: "#FF6B35"
            },
            {
              type: "separator",
              margin: "md"
            },
            {
              type: "box",
              layout: "vertical",
              margin: "lg",
              spacing: "sm",
              contents: [
                {
                  type: "text",
                  text: "üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£:",
                  weight: "bold",
                  size: "md",
                  color: "#FF6B35",
                  margin: "none"
                },
                {
                  type: "box",
                  layout: "baseline",
                  spacing: "sm",
                  margin: "md",
                  contents: [
                    {
                      type: "text",
                      text: "‡∏ä‡∏∑‡πà‡∏≠:",
                      color: "#666666",
                      size: "sm",
                      flex: 2
                    },
                    {
                      type: "text",
                      text: applicantName,
                      color: "#333333",
                      size: "sm",
                      flex: 3,
                      weight: "bold"
                    }
                  ]
                },
                {
                  type: "box",
                  layout: "baseline",
                  spacing: "sm",
                  contents: [
                    {
                      type: "text",
                      text: "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á:",
                      color: "#666666",
                      size: "sm",
                      flex: 2
                    },
                    {
                      type: "text",
                      text: `BT${borrowerId.substring(0, 10).toUpperCase()}`,
                      color: "#333333",
                      size: "sm",
                      flex: 3,
                      weight: "bold"
                    }
                  ]
                }
              ]
            },
            {
              type: "separator",
              margin: "lg"
            },
            {
              type: "box",
              layout: "vertical",
              margin: "lg",
              spacing: "sm",
              contents: [
                {
                  type: "text",
                  text: "üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£:",
                  weight: "bold",
                  size: "md",
                  color: "#FF6B35",
                  margin: "none"
                },
                {
                  type: "box",
                  layout: "baseline",
                  spacing: "sm",
                  margin: "md",
                  contents: [
                    {
                      type: "text",
                      text: "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:",
                      color: "#666666",
                      size: "sm",
                      flex: 2
                    },
                    {
                      type: "text",
                      text: `${statusEmoji} ${statusText}`,
                      color: statusColor,
                      size: "sm",
                      flex: 3,
                      weight: "bold"
                    }
                  ]
                },
                {
                  type: "box",
                  layout: "baseline",
                  spacing: "sm",
                  contents: [
                    {
                      type: "text",
                      text: "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£:",
                      color: "#666666",
                      size: "sm",
                      flex: 2
                    },
                    {
                      type: "text",
                      text: applicationDate,
                      color: "#333333",
                      size: "sm",
                      flex: 3
                    }
                  ]
                },
                {
                  type: "box",
                  layout: "baseline",
                  spacing: "sm",
                  contents: [
                    {
                      type: "text",
                      text: "‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠:",
                      color: "#666666",
                      size: "sm",
                      flex: 2
                    },
                    {
                      type: "text",
                      text: `${loanAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
                      color: "#1DB446",
                      size: "sm",
                      flex: 3,
                      weight: "bold"
                    }
                  ]
                },
                ...(phoneNumber !== '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏' ? [{
                  type: "box",
                  layout: "baseline",
                  spacing: "sm",
                  contents: [
                    {
                      type: "text",
                      text: "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:",
                      color: "#666666",
                      size: "sm",
                      flex: 2
                    },
                    {
                      type: "text",
                      text: phoneNumber,
                      color: "#333333",
                      size: "sm",
                      flex: 3
                    }
                  ]
                }] : [])
              ]
            },
            {
              type: "separator",
              margin: "lg"
            },
            {
              type: "box",
              layout: "vertical",
              margin: "lg",
              spacing: "sm",
              contents: [
                {
                  type: "text",
                  text: "‚è∞ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£:",
                  weight: "bold",
                  size: "md",
                  color: "#FF6B35"
                },
                ...steps.map((step, index) => ({
                  type: "box",
                  layout: "baseline",
                  spacing: "sm",
                  margin: index === 0 ? "md" : "sm",
                  contents: [
                    {
                      type: "text",
                      text: step.status,
                      color: step.color,
                      size: "sm",
                      flex: 0
                    },
                    {
                      type: "text",
                      text: step.text,
                      color: step.completed ? "#333333" : "#999999",
                      size: "sm",
                      flex: 1,
                      margin: "sm"
                    }
                  ]
                }))
              ]
            },
            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏´‡∏≤‡∏Å‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß
            ...(borrowerData.status === 'approved' || borrowerData.status === 'disbursed' ? [{
              type: "separator",
              margin: "lg"
            },
            {
              type: "box",
              layout: "vertical",
              margin: "lg",
              spacing: "sm",
              contents: [
                {
                  type: "text",
                  text: "üí∞ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ:",
                  weight: "bold",
                  size: "md",
                  color: "#1DB446"
                },
                {
                  type: "box",
                  layout: "baseline",
                  spacing: "sm",
                  margin: "md",
                  contents: [
                    {
                      type: "text",
                      text: "‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î:",
                      color: "#666666",
                      size: "sm",
                      flex: 2
                    },
                    {
                      type: "text",
                      text: borrowerData.dueDate?.toDate?.()?.toLocaleDateString('th-TH', {
                        year: 'numeric',
                        month: 'short',
                        day: 'numeric'
                      }) || '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î',
                      color: "#E74C3C",
                      size: "sm",
                      flex: 3,
                      weight: "bold"
                    }
                  ]
                },
                {
                  type: "box",
                  layout: "baseline",
                  spacing: "sm",
                  contents: [
                    {
                      type: "text",
                      text: "‡∏¢‡∏≠‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞:",
                      color: "#666666",
                      size: "sm",
                      flex: 2
                    },
                    {
                      type: "text",
                      text: `${((borrowerData.totalPayment || loanAmount * 1.1)).toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
                      color: "#E74C3C",
                      size: "sm",
                      flex: 3,
                      weight: "bold"
                    }
                  ]
                },
                ...(borrowerData.interestRate ? [{
                  type: "box",
                  layout: "baseline",
                  spacing: "sm",
                  contents: [
                    {
                      type: "text",
                      text: "‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢:",
                      color: "#666666",
                      size: "sm",
                      flex: 2
                    },
                    {
                      type: "text",
                      text: `${borrowerData.interestRate}% ‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô`,
                      color: "#333333",
                      size: "sm",
                      flex: 3
                    }
                  ]
                }] : [])
              ]
            }] : []),
            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
            ...(borrowerData.status === 'rejected' && borrowerData.rejectionReason ? [{
              type: "separator",
              margin: "lg"
            },
            {
              type: "box",
              layout: "vertical",
              margin: "lg",
              spacing: "sm",
              contents: [
                {
                  type: "text",
                  text: "‚ùå ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥:",
                  weight: "bold",
                  size: "md",
                  color: "#E74C3C"
                },
                {
                  type: "text",
                  text: borrowerData.rejectionReason,
                  color: "#666666",
                  size: "sm",
                  margin: "md",
                  wrap: true
                }
              ]
            }] : []),
            {
              type: "separator",
              margin: "lg"
            },
            {
              type: "box",
              layout: "vertical",
              margin: "lg",
              spacing: "sm",
              contents: [
                {
                  type: "text",
                  text: "üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°:",
                  weight: "bold",
                  size: "md",
                  color: "#FF6B35"
                },
                {
                  type: "text",
                  text: "‡πÇ‡∏ó‡∏£: 02-123-4567\nLINE: @baantk\n‡∏≠‡∏µ‡πÄ‡∏°‡∏•: info@baantk.com",
                  color: "#666666",
                  size: "sm",
                  margin: "md",
                  wrap: true
                },
                {
                  type: "text",
                  text: "‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£: ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå-‡∏®‡∏∏‡∏Å‡∏£‡πå 8:00-17:00",
                  color: "#999999",
                  size: "xs",
                  margin: "sm"
                }
              ]
            }
          ]
        }
      }
    };

  } catch (error) {
    console.error("‚ùå Error generating status message:", error);
    // ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö default status message
    return AUTO_REPLIES.status;
  }
}

// Process loan confirmation with digital signature
async function processLoanConfirmation(userId, params) {
  try {
    const borrowerId = params.borrowerId;
    const amount = parseInt(params.amount) || 0;
    
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ
    const borrowerDoc = await db.collection('borrowers').doc(borrowerId).get();
    if (!borrowerDoc.exists) {
      return {
        type: "text",
        text: "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏°‡∏±‡∏Ñ‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà"
      };
    }

    const borrowerData = borrowerDoc.data();
    const applicantName = borrowerData.fullName || borrowerData.firstName || '‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ';
    const interestRate = borrowerData.interestRate || 15;
    const totalDue = amount + (amount * (interestRate / 100));
    const currentDate = new Date().toLocaleDateString('th-TH', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });

    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô "contract_signed"
    await db.collection('borrowers').doc(borrowerId).update({
      contractSigned: true,
      signedDate: new Date(),
      digitalSignature: `${userId}_${Date.now()}`,
      status: 'contract_signed'
    });

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å transaction log
    await db.collection('contractLogs').add({
      borrowerId: borrowerId,
      userId: userId,
      action: 'digital_signature',
      timestamp: new Date(),
      amount: amount,
      interestRate: interestRate,
      totalDue: totalDue,
      ipAddress: 'LINE_Platform',
      userAgent: 'LINE_Bot'
    });

    return {
      type: "flex",
      altText: "‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
      contents: {
        type: "bubble",
        header: {
          type: "box",
          layout: "vertical",
          contents: [
            {
              type: "text",
              text: "‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
              weight: "bold",
              size: "xl",
              color: "#1DB446",
              align: "center"
            },
            {
              type: "text",
              text: "‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ô‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß",
              size: "sm",
              color: "#1DB446",
              align: "center",
              margin: "sm"
            }
          ],
          backgroundColor: "#F8F9FA",
          paddingAll: "20px"
        },
        body: {
          type: "box",
          layout: "vertical",
          contents: [
            {
              type: "text",
              text: `üéâ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∏‡∏ì ${applicantName}`,
              weight: "bold",
              size: "lg",
              color: "#333333"
            },
            {
              type: "text",
              text: "‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡πÅ‡∏•‡∏∞‡∏•‡∏á‡∏ô‡∏≤‡∏°‡πÉ‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
              wrap: true,
              color: "#666666",
              size: "sm",
              margin: "md"
            },
            {
              type: "separator",
              margin: "xl"
            },
            {
              type: "box",
              layout: "vertical",
              margin: "xl",
              spacing: "sm",
              contents: [
                {
                  type: "text",
                  text: "üìÑ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏±‡∏ç‡∏ç‡∏≤:",
                  weight: "bold",
                  size: "md",
                  color: "#1DB446"
                },
                {
                  type: "box",
                  layout: "baseline",
                  spacing: "sm",
                  margin: "md",
                  contents: [
                    {
                      type: "text",
                      text: "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏™‡∏±‡∏ç‡∏ç‡∏≤:",
                      color: "#666666",
                      size: "sm",
                      flex: 2
                    },
                    {
                      type: "text",
                      text: `BT${borrowerId.substring(0, 10).toUpperCase()}`,
                      color: "#333333",
                      size: "sm",
                      flex: 3,
                      weight: "bold"
                    }
                  ]
                },
                {
                  type: "box",
                  layout: "baseline",
                  spacing: "sm",
                  contents: [
                    {
                      type: "text",
                      text: "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ô‡∏≤‡∏°:",
                      color: "#666666",
                      size: "sm",
                      flex: 2
                    },
                    {
                      type: "text",
                      text: currentDate,
                      color: "#333333",
                      size: "sm",
                      flex: 3
                    }
                  ]
                },
                {
                  type: "box",
                  layout: "baseline",
                  spacing: "sm",
                  contents: [
                    {
                      type: "text",
                      text: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ:",
                      color: "#666666",
                      size: "sm",
                      flex: 2
                    },
                    {
                      type: "text",
                      text: `${amount.toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
                      color: "#1DB446",
                      size: "sm",
                      flex: 3,
                      weight: "bold"
                    }
                  ]
                },
                {
                  type: "box",
                  layout: "baseline",
                  spacing: "sm",
                  contents: [
                    {
                      type: "text",
                      text: "‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡∏£‡∏ß‡∏°:",
                      color: "#666666",
                      size: "sm",
                      flex: 2
                    },
                    {
                      type: "text",
                      text: `${totalDue.toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
                      color: "#E74C3C",
                      size: "sm",
                      flex: 3,
                      weight: "bold"
                    }
                  ]
                }
              ]
            },
            {
              type: "separator",
              margin: "xl"
            },
            {
              type: "box",
              layout: "vertical",
              margin: "xl",
              spacing: "sm",
              contents: [
                {
                  type: "text",
                  text: "üöÄ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:",
                  weight: "bold",
                  size: "md",
                  color: "#3498DB"
                },
                {
                  type: "text",
                  text: "1. ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ö‡∏±‡∏ç‡∏ä‡∏µ (‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)\n2. ‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏à‡πâ‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞\n3. ‡∏ä‡∏≥‡∏£‡∏∞‡∏ï‡∏≤‡∏°‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏",
                  wrap: true,
                  color: "#666666",
                  size: "sm",
                  margin: "md"
                }
              ]
            }
          ]
        },
        footer: {
          type: "box",
          layout: "vertical",
          spacing: "sm",
          contents: [
            {
              type: "button",
              style: "primary",
              height: "sm",
              action: {
                type: "postback",
                label: "üìä ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞",
                data: "action=check_status"
              }
            },
            {
              type: "button",
              style: "secondary",
              height: "sm",
              action: {
                type: "postback",
                label: "üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà",
                data: "action=contact"
              }
            }
          ]
        }
      }
    };

  } catch (error) {
    console.error("‚ùå Error processing loan confirmation:", error);
    return {
      type: "text",
      text: "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà"
    };
  }
}

// Generate full contract view
async function generateContractView(userId, params) {
  try {
    const borrowerId = params.borrowerId || 'unknown';
    
    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ
    let borrowerData = {};
    if (borrowerId !== 'unknown') {
      const borrowerDoc = await db.collection('borrowers').doc(borrowerId).get();
      if (borrowerDoc.exists) {
        borrowerData = borrowerDoc.data();
      }
    }

    const applicantName = borrowerData.fullName || borrowerData.firstName || '‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ';
    const loanAmount = borrowerData.totalLoan || borrowerData.amount || 0;
    const interestRate = borrowerData.interestRate || 15;
    const totalDue = loanAmount + (loanAmount * (interestRate / 100));
    const dueDate = borrowerData.dueDate?.toDate?.()?.toLocaleDateString('th-TH') || 
                   new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toLocaleDateString('th-TH');

    return {
      type: "flex",
      altText: "üìÑ ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏°‡πÄ‡∏á‡∏¥‡∏ô BaanTK",
      contents: {
        type: "bubble",
        header: {
          type: "box",
          layout: "vertical",
          contents: [
            {
              type: "text",
              text: "üìÑ ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏°‡πÄ‡∏á‡∏¥‡∏ô",
              weight: "bold",
              size: "xl",
              color: "#1DB446",
              align: "center"
            },
            {
              type: "text",
              text: "BaanTK Financial Services",
              size: "sm",
              color: "#666666",
              align: "center",
              margin: "sm"
            }
          ],
          backgroundColor: "#F8F9FA",
          paddingAll: "20px"
        },
        body: {
          type: "box",
          layout: "vertical",
          contents: [
            {
              type: "text",
              text: "üìã ‡∏Ç‡πâ‡∏≠‡∏ï‡∏Å‡∏•‡∏á‡πÅ‡∏•‡∏∞‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç",
              weight: "bold",
              size: "lg",
              color: "#333333"
            },
            {
              type: "separator",
              margin: "md"
            },
            {
              type: "box",
              layout: "vertical",
              margin: "lg",
              spacing: "md",
              contents: [
                {
                  type: "text",
                  text: `üë§ ‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ: ${applicantName}`,
                  size: "sm",
                  color: "#333333",
                  weight: "bold"
                },
                {
                  type: "text",
                  text: `üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ: ${loanAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
                  size: "sm",
                  color: "#1DB446",
                  weight: "bold"
                },
                {
                  type: "text",
                  text: `üìà ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢: ${interestRate}% ‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô`,
                  size: "sm",
                  color: "#E74C3C",
                  weight: "bold"
                },
                {
                  type: "text",
                  text: `üí≥ ‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡∏£‡∏ß‡∏°: ${totalDue.toLocaleString()} ‡∏ö‡∏≤‡∏ó`,
                  size: "sm",
                  color: "#E74C3C",
                  weight: "bold"
                },
                {
                  type: "text",
                  text: `üìÖ ‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î: ${dueDate}`,
                  size: "sm",
                  color: "#E74C3C",
                  weight: "bold"
                }
              ]
            },
            {
              type: "separator",
              margin: "xl"
            },
            {
              type: "box",
              layout: "vertical",
              margin: "xl",
              spacing: "sm",
              contents: [
                {
                  type: "text",
                  text: "‚öñÔ∏è ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:",
                  weight: "bold",
                  size: "md",
                  color: "#E74C3C"
                },
                {
                  type: "text",
                  text: "1. ‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏ï‡∏Å‡∏•‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏\n\n2. ‡∏´‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏ú‡∏¥‡∏î‡∏ô‡∏±‡∏î‡∏ä‡∏≥‡∏£‡∏∞ ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≤‡∏á‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢\n\n3. ‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏™‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ü‡πâ‡∏≠‡∏á‡∏£‡πâ‡∏≠‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏ï‡πâ‡πÅ‡∏¢‡πâ‡∏á‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢\n\n4. ‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏¢‡∏¥‡∏ô‡∏¢‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏ß‡∏á‡∏ñ‡∏≤‡∏°‡∏´‡∏ô‡∏µ‡πâ‡∏ï‡∏≤‡∏°‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢\n\n5. ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏ú‡∏•‡∏ï‡∏≤‡∏°‡∏Å‡∏é‡∏´‡∏°‡∏≤‡∏¢‡πÑ‡∏ó‡∏¢",
                  wrap: true,
                  color: "#666666",
                  size: "xs",
                  margin: "md"
                }
              ]
            },
            {
              type: "separator",
              margin: "xl"
            },
            {
              type: "box",
              layout: "vertical",
              margin: "lg",
              spacing: "sm",
              contents: [
                {
                  type: "text",
                  text: "üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡∏µ‡πâ:",
                  weight: "bold",
                  size: "sm",
                  color: "#1DB446"
                },
                {
                  type: "text",
                  text: "BaanTK Financial Services\n‡πÇ‡∏ó‡∏£: 02-123-4567\n‡∏≠‡∏µ‡πÄ‡∏°‡∏•: info@baantk.com",
                  size: "xs",
                  color: "#666666",
                  margin: "sm"
                }
              ]
            }
          ]
        },
        footer: {
          type: "box",
          layout: "vertical",
          spacing: "sm",
          contents: [
            {
              type: "button",
              style: "primary",
              height: "sm",
              color: "#1DB446",
              action: {
                type: "postback",
                label: "‚úÖ ‡∏â‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç",
                data: `action=confirm_loan&borrowerId=${borrowerId}&amount=${loanAmount}`
              }
            },
            {
              type: "button",
              style: "secondary",
              height: "sm",
              action: {
                type: "postback",
                label: "üìû ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°",
                data: "action=contact"
              }
            }
          ]
        }
      }
    };

  } catch (error) {
    console.error("‚ùå Error generating contract view:", error);
    return {
      type: "text",
      text: "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà"
    };
  }
}

// Export functions for testing and external use
module.exports = {
  processLineMessage,
  processPostbackEvent,
  sendReply,
  sendReplyMessage,
  sendWelcomeMessage,
  processImageMessage,
  sendPushMessage,
  sendBroadcastMessage,
  sendSlipApprovalNotification,
  sendApplicationStatusNotification,
  processLoanConfirmation,
  generateContractView,
  generateStatusMessage,
  // Main event processor for webhook
  processLineEvent: async (event) => {
   
    try {
      console.log("üì® Processing LINE event:", event.type);
      
      switch (event.type) {
        case 'message':
          if (event.message.type === 'text') {
            return await processLineMessage(event.source.userId, event.message.text, event.replyToken);
          } else if (event.message.type === 'image') {
            return await processImageMessage(event.source.userId, event.message.id, event.replyToken);
          }
          break;
          
        case 'postback':
          return await processPostbackEvent(event.source.userId, event.postback.data, event.replyToken);
          
        case 'follow':
          return await sendWelcomeMessage(event.source.userId, event.replyToken);
          
        case 'unfollow':
          console.log("üëã User unfollowed:", event.source.userId);
          return { success: true };
          
        default:
          console.log("‚ùì Unknown event type:", event.type);
          return { success: true };
      }
    } catch (error) {
      console.error("‚ùå Error processing LINE event:", error);
      return { success: false, error: error.message };
    }
  },
  
  // Configuration and client access
  LINE_CONFIG,
  lineClient,
  userStates
};
