// üèóÔ∏è Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• test borrower ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
const admin = require('firebase-admin');

// Initialize Firebase Admin (‡πÉ‡∏ä‡πâ service account key ‡∏à‡∏≤‡∏Å environment)
const serviceAccount = {
  "type": "service_account",
  "project_id": "baan-tk",
  "private_key_id": "fbsvcecde45a1e5ad20c7ca6ade8e8bb46b63ce",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCUtXyPa/ZSL6JE\n3twvVwpxxgJ+OjwO4O4m0O3FVQqAOH7HJyEzuNqWgyYe7PBktdrBbq528sYb1ly4\nphmRxW+6VOuXlGVvw4YbIQwxPLuqXGyh+Uziln/5eJozty5AGQ2JyqamieFf6oTx\nLoNMOJU+20JSVcluQu2BXvF7PQ7YM+GH4WiiIaJu+JA4M3QjPRaUs6ljaBPBKFQn\no1b8av/fsubMg8Hac/8SamCgjeR+/IZx/doSPcVUzEE8bXLAGErYDqgKy29tOC9W\ndC3hafwqaJcVMXkpN5unhP+MCaYRSBL9Wko9gD3ErqmRQq1OlzojGGd+KFUzdip0\nvHnMLnqbAgMBAAECggEAQcDlrLz+E2UAiRdJoJ0J/zigjZPOTn3ij8M9/00U8ZEJ\nbaG9qpMIBBlFV9NIkB9g9Lqt5eZ+9nwYT4USNURpnKhD66gwGfUIbSJ1s6e5CyEG\n36/N8Tq+p15OQKO0jZ8GP3EdsvGwd6rI0aPRZnh2dW6ZqrJH+LsbLWL/v5BF6g6J\n/vv5HbiARxL3KtLFcSiEW8EjKJEqGgtFn3yXz7pn1HZjHRDkaisRelOSsoMsD2qJ\nfEKC8YFxsbitph+zXiZGAefJD5YZBimGziAzolxBEE6jmRGTyqSWak3qCXtujvnb\naDGBZIvEzXmBWuALNaz3DimQ/CkMyAooYZ8Fv6MvMQKBgQDJTLmyI0zqIl2LoXqY\niB7dLuTxTz5KqDu5YCxcr8kSaZnxuCevbTDL1deje1V6s2kvUQubjqgBIzW/o+sN\nkyncgaeScXWIgvPGwtn+u35Hl4/eLFxRp7+5BTFr/fgjE5K5SZ+cQe66L4wrj/og\nF2+38B14nWh9yo7SocyDDIlfzwKBgQC9HlH+LfcaXRRPgWEGZlwsrIWHGqUNpAjT\nAvP0Kl8Jy0aZWV+BF+kBVAcc2vXi0dw7oR04oVXiReLE9Xy13oV6cFwRfNx6aPs8\nAHeXWjh/goqFo0vhKknHVAi6sjkWxHVjA1Fuezs1cO3ZpgfQLoxWMcXz3OW27OEw\n0E9csMJ/dQKBgQCyI+kNoTm21ZStNcj1ZTjTCmXmuvboQLsh0N9RYurxFWz7wbm1\nAE83g9WiQkoiHNWP3wwDrJo2737oSlqAF+Tq0/6ElU2q8iBjnBoo2KnnF1RlDCLi\nzC3ZwaO76vQFrpOgz2ulb5+hOuSzxGVYswTV5XNfQwWulGwSMMd4jcagdwKBgHkO\nko+xHq7qjBjEibYOCcyy9ppgDO1pZhikmEJgaQuc6mk5E3BQPN+TySXIZ4M0sNQe\nstTQOWipMZrARX8pnKmeiODM21kkIEXtSqBAqU+94SvgNq9AYY/Nk/TmJrMTOM0T\nj6m4ClOQIUCkDfZOBZkbLUqHySfKA/A6N8LuhuINAoGAC/utbtJa8pMDb88jqYlW\ntITzUpiNixmBTvpVbocodY71Fse2+Wt+ubQOOKIbnsB3/t5mIu7UJXZeDD0Bwykt\nOre444lnXpYvIW264AqSZi3gzAo7N4vx93agYLxI6y6bhjHJ9tXWXS454NDisW4z\nqjJJC2q0I9pvBLpMV5IHXpw=\n-----END PRIVATE KEY-----\n",
  "client_email": "firebase-adminsdk-fbsvc@baan-tk.iam.gserviceaccount.com",
  "client_id": "115977374877950067899",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs?gid=115977374877950067899"
};

// Initialize Firebase Admin SDK
admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

const db = admin.firestore();

// Real User ID ‡∏à‡∏≤‡∏Å logs
const REAL_USER_ID = 'U79c0d4968f31138b09d6e71c3bcc5296';

async function createTestBorrower() {
  try {
    console.log('üèóÔ∏è ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• test borrower ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö...');
    console.log(`üë§ User ID: ${REAL_USER_ID}`);
    console.log('='.repeat(60));
    
    const testData = {
      lineUserId: REAL_USER_ID,
      fullName: '‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥',
      phoneNumber: '0812345678',
      nationalId: '1234567890123',
      email: 'test.auto@example.com',
      requestedAmount: 75000,
      purpose: '‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏∏‡∏ô‡∏´‡∏°‡∏∏‡∏ô‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à',
      monthlyIncome: 35000,
      occupation: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó',
      status: 'approved',
      referenceNumber: 'TK' + Date.now(),
      timestamp: admin.firestore.Timestamp.now(),
      createdAt: admin.firestore.Timestamp.now(),
      updatedAt: admin.firestore.Timestamp.now(),
      approvedAt: admin.firestore.Timestamp.now(),
      interestRate: 2.5,
      loanTerm: 12,
      monthlyPayment: 6500,
      dueDate: admin.firestore.Timestamp.fromDate(new Date(Date.now() + (30 * 24 * 60 * 60 * 1000))), // 30 ‡∏ß‡∏±‡∏ô
      contractSigned: false,
      digitalSignature: null,
      
      // Process steps
      steps: [
        {
          step: 1,
          title: '‡∏¢‡∏∑‡πà‡∏ô‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£',
          status: 'completed',
          timestamp: admin.firestore.Timestamp.fromDate(new Date(Date.now() - (3 * 24 * 60 * 60 * 1000))), // 3 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß
          description: '‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏î‡πâ‡∏¢‡∏∑‡πà‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô'
        },
        {
          step: 2,
          title: '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£',
          status: 'completed',
          timestamp: admin.firestore.Timestamp.fromDate(new Date(Date.now() - (2 * 24 * 60 * 60 * 1000))), // 2 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß
          description: '‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô'
        },
        {
          step: 3,
          title: '‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á',
          status: 'completed',
          timestamp: admin.firestore.Timestamp.fromDate(new Date(Date.now() - (1 * 24 * 60 * 60 * 1000))), // 1 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß
          description: '‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á'
        },
        {
          step: 4,
          title: '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏™‡∏¥‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠',
          status: 'completed',
          timestamp: admin.firestore.Timestamp.now(),
          description: '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô 75,000 ‡∏ö‡∏≤‡∏ó'
        },
        {
          step: 5,
          title: '‡∏•‡∏á‡∏ô‡∏≤‡∏°‡∏™‡∏±‡∏ç‡∏ç‡∏≤',
          status: 'pending',
          timestamp: null,
          description: '‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ô‡∏≤‡∏°‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏î‡∏¥‡∏à‡∏¥‡∏ó‡∏±‡∏•'
        }
      ],
      
      // Loan details
      loanDetails: {
        principal: 75000,
        interestRate: 2.5,
        termMonths: 12,
        monthlyPayment: 6500,
        totalPayment: 78000,
        firstPaymentDate: admin.firestore.Timestamp.fromDate(new Date(Date.now() + (30 * 24 * 60 * 60 * 1000)))
      },
      
      // Documents
      documents: {
        idCard: { status: 'verified', uploadedAt: admin.firestore.Timestamp.now() },
        bankStatement: { status: 'verified', uploadedAt: admin.firestore.Timestamp.now() },
        incomeProof: { status: 'verified', uploadedAt: admin.firestore.Timestamp.now() }
      }
    };
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÉ‡∏ô Firestore
    const docRef = await db.collection('borrowers').add(testData);
    
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• test borrower ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
    console.log(`üìÑ Document ID: ${docRef.id}`);
    console.log(`üìã Reference Number: ${testData.referenceNumber}`);
    console.log(`üí∞ Amount: ${testData.requestedAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó`);
    console.log(`üìà Status: ${testData.status}`);
    console.log(`üî¢ Steps: ${testData.steps.length} ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô`);
    
    return {
      success: true,
      documentId: docRef.id,
      data: testData
    };
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', error);
    return {
      success: false,
      error: error.message
    };
  }
}

async function listExistingBorrowers() {
  try {
    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• borrowers ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà...');
    console.log(`üë§ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö User ID: ${REAL_USER_ID}`);
    console.log('='.repeat(60));
    
    const snapshot = await db.collection('borrowers')
      .where('lineUserId', '==', REAL_USER_ID)
      .orderBy('timestamp', 'desc')
      .get();
    
    if (snapshot.empty) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• borrowers ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö User ID ‡∏ô‡∏µ‡πâ');
      return [];
    }
    
    console.log(`‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${snapshot.size} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:`);
    
    const borrowers = [];
    snapshot.forEach(doc => {
      const data = doc.data();
      borrowers.push({
        id: doc.id,
        ...data
      });
      
      console.log(`\nüìÑ Document ID: ${doc.id}`);
      console.log(`üìã Reference: ${data.referenceNumber}`);
      console.log(`üë§ Name: ${data.fullName}`);
      console.log(`üí∞ Amount: ${data.requestedAmount?.toLocaleString()} ‡∏ö‡∏≤‡∏ó`);
      console.log(`üìà Status: ${data.status}`);
      console.log(`üïê Created: ${data.createdAt?.toDate?.()?.toLocaleString('th-TH') || 'N/A'}`);
    });
    
    return borrowers;
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', error);
    return [];
  }
}

async function deleteTestBorrowers() {
  try {
    console.log('üóëÔ∏è ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• test borrowers...');
    console.log(`üë§ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö User ID: ${REAL_USER_ID}`);
    console.log('='.repeat(60));
    
    const snapshot = await db.collection('borrowers')
      .where('lineUserId', '==', REAL_USER_ID)
      .get();
    
    if (snapshot.empty) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö');
      return;
    }
    
    console.log(`üîç ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${snapshot.size} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö`);
    
    const batch = db.batch();
    snapshot.docs.forEach(doc => {
      batch.delete(doc.ref);
      console.log(`üìÑ ‡∏à‡∏∞‡∏•‡∏ö: ${doc.id} (${doc.data().referenceNumber})`);
    });
    
    await batch.commit();
    console.log('‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', error);
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
async function main() {
  try {
    const args = process.argv.slice(2);
    const command = args[0] || 'create';
    
    console.log('üîß Firebase Test Data Manager');
    console.log(`‚è∞ ${new Date().toLocaleString('th-TH')}`);
    console.log('='.repeat(70));
    
    switch (command) {
      case 'create':
        await createTestBorrower();
        break;
        
      case 'list':
        await listExistingBorrowers();
        break;
        
      case 'delete':
        await deleteTestBorrowers();
        break;
        
      case 'reset':
        console.log('1Ô∏è‚É£ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤...\n');
        await deleteTestBorrowers();
        
        console.log('\n2Ô∏è‚É£ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà...\n');
        await createTestBorrower();
        break;
        
      default:
        console.log('üìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:');
        console.log('  node create-test-borrower.js [command]');
        console.log('');
        console.log('üîß Commands:');
        console.log('  create   - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• test borrower (default)');
        console.log('  list     - ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• borrowers ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà');
        console.log('  delete   - ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• test borrowers ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î');
        console.log('  reset    - ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà');
        break;
    }
    
    console.log('\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
    process.exit(0);
    
  } catch (error) {
    console.error('üí• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error);
    process.exit(1);
  }
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
if (require.main === module) {
  main();
}

module.exports = {
  createTestBorrower,
  listExistingBorrowers,
  deleteTestBorrowers
};
