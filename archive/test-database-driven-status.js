// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Dynamic Status Message ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß
// ‡∏à‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á 100%

const axios = require('axios');

// LINE User IDs for testing (‡∏õ‡∏Å‡∏ï‡∏¥‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å LINE app ‡∏à‡∏£‡∏¥‡∏á)
const TEST_USER_IDS = [
  'test-user-with-data',  // user ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  'test-user-no-data'     // user ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
];

const WEBHOOK_URL = 'https://webhook-kkrrpg5icq-uc.a.run.app';

// ‡∏™‡∏£‡πâ‡∏≤‡∏á LINE event ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö status check
function createStatusCheckEvent(userId, method = 'text') {
  if (method === 'text') {
    return {
      events: [
        {
          type: 'message',
          message: {
            type: 'text',
            text: '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'
          },
          replyToken: 'test-reply-token-' + Date.now(),
          source: {
            userId: userId,
            type: 'user'
          }
        }
      ]
    };
  } else {
    return {
      events: [
        {
          type: 'postback',
          postback: {
            data: 'action=check_status'
          },
          replyToken: 'test-reply-token-' + Date.now(),
          source: {
            userId: userId,
            type: 'user'
          }
        }
      ]
    };
  }
}

async function testDynamicStatus() {
  console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Dynamic Status Message (Database-driven)');
  console.log('üìä ‡∏à‡∏∞‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏ó‡∏ô mockup');
  console.log('=' * 60);

  const testCases = [
    {
      description: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°',
      userId: TEST_USER_IDS[0],
      method: 'text'
    },
    {
      description: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö - ‡∏õ‡∏∏‡πà‡∏°',
      userId: TEST_USER_IDS[0],
      method: 'postback'
    },
    {
      description: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö - ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°',
      userId: TEST_USER_IDS[1],
      method: 'text'
    },
    {
      description: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö - ‡∏õ‡∏∏‡πà‡∏°',
      userId: TEST_USER_IDS[1],
      method: 'postback'
    }
  ];

  for (const testCase of testCases) {
    console.log(`\nüîç ${testCase.description}`);
    console.log(`üë§ User ID: ${testCase.userId}`);
    console.log(`üìù Method: ${testCase.method}`);
    
    try {
      const eventData = createStatusCheckEvent(testCase.userId, testCase.method);
      
      console.log('üì§ Sending request...');
      const response = await axios.post(WEBHOOK_URL, eventData, {
        headers: {
          'Content-Type': 'application/json',
          'x-line-signature': 'test-signature'
        },
        timeout: 15000
      });

      console.log('‚úÖ Response Status:', response.status);
      console.log('üìã Response Data:', JSON.stringify(response.data, null, 2));
      
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á
      if (response.data && response.data.success) {
        console.log('‚úÖ Dynamic status working correctly');
        if (response.data.dataSource === 'database') {
          console.log('üéØ ‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á');
        } else if (response.data.dataSource === 'fallback') {
          console.log('‚ö†Ô∏è  ‡πÉ‡∏ä‡πâ fallback (‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)');
        }
      }

    } catch (error) {
      console.error('‚ùå Error:', error.message);
      if (error.response) {
        console.error('üìã Error Response:', error.response.data);
      }
    }
    
    console.log('-'.repeat(40));
  }
}

async function testStatusMessageFields() {
  console.log('\nüìä ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Status Message');
  console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏°‡∏≤‡∏à‡∏≤‡∏Å database ‡∏à‡∏£‡∏¥‡∏á');
  
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á test user ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÉ‡∏ô memory ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö structure
  const mockUserData = {
    fullName: '‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
    phoneNumber: '081-234-5678',
    totalLoan: 25000,
    status: 'approved',
    timestamp: new Date(),
    dueDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 ‡∏ß‡∏±‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤
    interestRate: 15,
    totalPayment: 28750,
    rejectionReason: null
  };

  console.log('üìù Expected fields in dynamic status:');
  console.log('- ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£:', mockUserData.fullName);
  console.log('- ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:', mockUserData.phoneNumber);
  console.log('- ‡∏ß‡∏á‡πÄ‡∏á‡∏¥‡∏ô:', mockUserData.totalLoan.toLocaleString(), '‡∏ö‡∏≤‡∏ó');
  console.log('- ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:', mockUserData.status);
  console.log('- ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£:', mockUserData.timestamp.toLocaleDateString('th-TH'));
  console.log('- ‡∏ß‡∏±‡∏ô‡∏Ñ‡∏£‡∏ö‡∏Å‡∏≥‡∏´‡∏ô‡∏î:', mockUserData.dueDate.toLocaleDateString('th-TH'));
  console.log('- ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢:', mockUserData.interestRate + '%');
  console.log('- ‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞‡∏£‡∏ß‡∏°:', mockUserData.totalPayment.toLocaleString(), '‡∏ö‡∏≤‡∏ó');
  
  console.log('\nüéØ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á');
  console.log('‚ö†Ô∏è  ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Ñ‡∏ß‡∏£‡πÅ‡∏™‡∏î‡∏á fallback message');
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
async function runAllTests() {
  try {
    await testStatusMessageFields();
    await testDynamicStatus();
    
    console.log('\nüéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    console.log('üìã ‡∏™‡∏£‡∏∏‡∏õ:');
    console.log('‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö Dynamic Status ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
    console.log('‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á 100%');
    console.log('‚úÖ ‡∏°‡∏µ fallback ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
    console.log('‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ú‡πà‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏õ‡∏∏‡πà‡∏°');
    
  } catch (error) {
    console.error('‚ùå Test failed:', error);
  }
}

if (require.main === module) {
  runAllTests();
}

module.exports = {
  testDynamicStatus,
  testStatusMessageFields,
  createStatusCheckEvent
};
