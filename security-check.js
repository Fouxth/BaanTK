#!/usr/bin/env node

/**
 * üîí Security Check Script ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö BaanTK
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Å‡πà‡∏≠‡∏ô deploy
 */

const fs = require('fs');
const path = require('path');

console.log('üîç ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ BaanTK...\n');

let hasErrors = false;
let hasWarnings = false;

// ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏´‡πâ‡∏≤‡∏°‡∏°‡∏µ‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î
const SENSITIVE_PATTERNS = [
  {
    pattern: /htsHzjHcSkA1Xu3Qtf7C/g,
    description: 'LINE Channel Access Token ‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡πà‡∏≤',
    severity: 'ERROR'
  },
  {
    pattern: /87fe8316138c02b02a4e20dafde563fd/g,
    description: 'LINE Channel Secret ‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡πà‡∏≤',
    severity: 'ERROR'
  },
  {
    pattern: /BaanTK@Admin#2024\$Secure!/g,
    description: 'Admin Token ‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡πà‡∏≤',
    severity: 'ERROR'
  },
  {
    pattern: /admin123/g,
    description: '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô admin ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢',
    severity: 'ERROR'
  },
  {
    pattern: /password.*=.*["'].*["']/gi,
    description: '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ï‡∏≤‡∏¢‡∏ï‡∏±‡∏ß',
    severity: 'WARNING'
  },
  {
    pattern: /token.*=.*["'][^"']{20,}["']/gi,
    description: 'Token ‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ï‡∏≤‡∏¢‡∏ï‡∏±‡∏ß',
    severity: 'WARNING'
  }
];

// ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
const FILES_TO_CHECK = [
  'functions/index.js',
  'functions/simple.js',
  'functions/line-auto-reply.js',
  'functions/minimal.js',
  'functions/contractService.js',
  'functions/creditScoring.js',
  'functions/governmentAPI.js',
  'functions/security.js',
  'functions/validation.js'
];

// Environment variables ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
const REQUIRED_ENV_VARS = [
  'CHANNEL_ACCESS_TOKEN',
  'CHANNEL_SECRET',
  'ADMIN_SECRET_TOKEN'
];

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå
 */
function checkFile(filePath) {
  if (!fs.existsSync(filePath)) {
    console.log(`‚ö†Ô∏è  ‡πÑ‡∏ü‡∏•‡πå ${filePath} ‡πÑ‡∏°‡πà‡∏û‡∏ö - ‡∏Ç‡πâ‡∏≤‡∏°`);
    return;
  }

  const content = fs.readFileSync(filePath, 'utf8');
  let fileHasIssues = false;

  console.log(`üìÑ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö ${filePath}...`);

  SENSITIVE_PATTERNS.forEach(({ pattern, description, severity }) => {
    const matches = content.match(pattern);
    if (matches) {
      fileHasIssues = true;
      
      if (severity === 'ERROR') {
        console.log(`   ‚ùå ERROR: ${description}`);
        console.log(`      ‡∏û‡∏ö: ${matches[0].substring(0, 20)}...`);
        hasErrors = true;
      } else {
        console.log(`   ‚ö†Ô∏è  WARNING: ${description}`);
        console.log(`      ‡∏û‡∏ö: ${matches[0].substring(0, 20)}...`);
        hasWarnings = true;
      }
    }
  });

  if (!fileHasIssues) {
    console.log(`   ‚úÖ ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢`);
  }
}

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö environment variables
 */
function checkEnvironmentVariables() {
  console.log('\nüîß ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Environment Variables...');
  
  const envExamplePath = 'functions/.env.example';
  const envPath = 'functions/.env';
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå .env.example
  if (!fs.existsSync(envExamplePath)) {
    console.log('‚ùå ERROR: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå functions/.env.example');
    hasErrors = true;
    return;
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå .env ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö development
  if (!fs.existsSync(envPath)) {
    console.log('‚ö†Ô∏è  WARNING: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå functions/.env ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö development');
    console.log('   ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: cp functions/.env.example functions/.env');
    hasWarnings = true;
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÉ‡∏ô .env.example
  const envExampleContent = fs.readFileSync(envExamplePath, 'utf8');
  
  REQUIRED_ENV_VARS.forEach(varName => {
    if (!envExampleContent.includes(varName)) {
      console.log(`‚ùå ERROR: ‡πÑ‡∏°‡πà‡∏û‡∏ö ${varName} ‡πÉ‡∏ô .env.example`);
      hasErrors = true;
    } else {
      console.log(`   ‚úÖ ${varName} ‡∏û‡∏ö‡πÉ‡∏ô .env.example`);
    }
  });
}

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö .gitignore
 */
function checkGitignore() {
  console.log('\nüìù ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö .gitignore...');
  
  if (!fs.existsSync('.gitignore')) {
    console.log('‚ùå ERROR: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå .gitignore');
    hasErrors = true;
    return;
  }

  const gitignoreContent = fs.readFileSync('.gitignore', 'utf8');
  
  const requiredIgnores = ['.env', 'functions/.env', '*.key', '*.pem'];
  
  requiredIgnores.forEach(ignore => {
    if (!gitignoreContent.includes(ignore)) {
      console.log(`‚ùå ERROR: .gitignore ‡πÑ‡∏°‡πà‡∏°‡∏µ ${ignore}`);
      hasErrors = true;
    } else {
      console.log(`   ‚úÖ ${ignore} ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô .gitignore`);
    }
  });
}

/**
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö CORS configuration
 */
function checkCORSConfiguration() {
  console.log('\nüåê ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö CORS Configuration...');
  
  const simpleJsPath = 'functions/simple.js';
  if (!fs.existsSync(simpleJsPath)) {
    console.log('‚ö†Ô∏è  ‡πÑ‡∏ü‡∏•‡πå simple.js ‡πÑ‡∏°‡πà‡∏û‡∏ö - ‡∏Ç‡πâ‡∏≤‡∏°');
    return;
  }

  const content = fs.readFileSync(simpleJsPath, 'utf8');
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö NODE_ENV
  if (content.includes('process.env.NODE_ENV === "production"')) {
    console.log('   ‚úÖ ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö production mode ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö CORS');
  } else {
    console.log('‚ö†Ô∏è  WARNING: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö production mode ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö CORS');
    hasWarnings = true;
  }
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï origin ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô production
  if (content.includes('callback(null, true)') && !content.includes('isProduction')) {
    console.log('‚ö†Ô∏è  WARNING: ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï CORS ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô production');
    hasWarnings = true;
  }
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
 */
function showSummary() {
  console.log('\n' + '='.repeat(50));
  console.log('üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢');
  console.log('='.repeat(50));
  
  if (hasErrors) {
    console.log('‚ùå ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡πâ‡∏≤‡∏¢‡πÅ‡∏£‡∏á - ‡∏´‡πâ‡∏≤‡∏° deploy!');
    console.log('   ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πà‡∏≠‡∏ô deploy');
  } else if (hasWarnings) {
    console.log('‚ö†Ô∏è  ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏£‡∏£‡∏∞‡∏ß‡∏±‡∏á - ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡πà‡∏≠‡∏ô deploy');
    console.log('   ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ deploy ‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏Ñ‡∏ß‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢');
  } else {
    console.log('‚úÖ ‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î!');
    console.log('   ‡∏û‡∏£‡πâ‡∏≠‡∏° deploy ‡πÑ‡∏î‡πâ');
  }
  
  console.log('\nüìö ‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°: SECURITY.md');
  console.log('='.repeat(50));
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏Ñ‡πâ‡∏î...');
FILES_TO_CHECK.forEach(checkFile);

checkEnvironmentVariables();
checkGitignore();
checkCORSConfiguration();
showSummary();

// Exit code
process.exit(hasErrors ? 1 : 0);